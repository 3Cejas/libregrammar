<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../../../../../../../../../languagetool-core/src/main/resources/org/languagetool/rules/print.xsl" title="Pretty print" ?>
<?xml-stylesheet type="text/css" href="../../../../../../../../../languagetool-core/src/main/resources/org/languagetool/rules/rules.css" title="Easy editing stylesheet" ?>
<!--
German Disambiguation Rules for LanguageTool
Copyright © 2013 Markus Brenneis, Daniel Naber, Jan Schreiber
-->
  <!DOCTYPE rules [
    <!ENTITY zal_adj "(?-i)(\d+-|(ein|zw(ei|an)|dreiß?|vier|fünf|s(echs?|ieb(en)?)|acht|neun)(zehn|zig)?)(jähr|bänd|seit|monat|täg|köpf)">
    
    <!ENTITY browser_protocols "(?:a(?:aas?|bout|cap|cct|cr|diumxtra|fp|fs|im|mss|pt|ttachment|w)|b(?:arion|eshare|itcoin|lob|olo)|c(?:allto|ap|hrome|id|oaps?|ontent|rid|vs)|da(?:b|ta|av)|d(?:ict|ns|ntp|rm|tn|vb)|e(?:d2k|xamples?)|fa(?:cetime|x)|f(?:eed|ile(?:system)?|i(?:nger|sh)|m|tp)|g(?:(?:eo|g)|i(?:t|zmoproject)|o(?:pher)?|talk)|h(?:323|cp|ttps?)|i(?:ax|cap|con|m(?:ap)?|nfo|otdisco|pn|pps?|ir(?:6?|cs|is|tms)|j(?:a(?:bber|r)|ms)|keyparc|l(?:astfm|daps?)|ma(?:gnet|ilserver|ilto|kes|ps|rket)|m(?:essage|id|ms|odem|snim|srps?|tqp|umble|update|vn)|n(?:ews|fs|i(?:h)?|ntp|otes)|obsolete|o(?:id|paquelocktoken)|pa(?:ck|lm|parazzi)|p(?:kcs11|latform|op|res|ro(?:spero|xy)|syc)|query|re(?:diss?|load|s(?:ource)?)|r(?:mi|sync|tmfp|t(?:mp|sp))|se(?:condlife|rvice|ssion)|s(?:ftp|gn|http|ieve|ips?|kype|mb|ms|n(?:ews|mp)|oldat|potify|sh|team|tuns?|vn)|t(?:ag|eamspeak|el(?:net)?|ftp|hings|hismessage|ip|n3270|urns?|v)|u(?:dp|nreal|rn|t2004)|v(?:e(?:mmi|ntrilo)|ideotex|nc))|w(?:ais|ebcal|ss?|tai|yciwyg)|x(?:con|fire|mpp|ri)|ymsgr)">
 
]>

<rules lang="de" xsi:noNamespaceSchemaLocation="../../../../../../../../../languagetool-core/src/main/resources/org/languagetool/resource/disambiguation.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xs="http://www.w3.org/2001/XMLSchema">

    <unification feature="number">
        <equivalence type="sg">
            <token postag=".*:SIN:.*" postag_regexp="yes"/>
        </equivalence>
        <equivalence type="pl">
            <token postag=".*:PLU:.*" postag_regexp="yes"/>
        </equivalence>
    </unification>

    <unification feature="case">
        <equivalence type="nom">
            <token postag=".*:NOM:.*" postag_regexp="yes"/>
        </equivalence>
        <equivalence type="akk">
            <token postag=".*:AKK:.*" postag_regexp="yes"/>
        </equivalence>
        <equivalence type="dat">
            <token postag=".*:DAT:.*" postag_regexp="yes"/>
        </equivalence>
        <equivalence type="gen">
            <token postag=".*:GEN:.*" postag_regexp="yes"/>
        </equivalence>
    </unification>

    <unification feature="gender">
        <!-- NOG = no gender, benutzt für Nomen, die nur im Plural vorkommen wie "Ferien" -->
        <equivalence type="mas">
            <token postag=".*:(MAS|NOG).*" postag_regexp="yes"/>
        </equivalence>
        <equivalence type="fem">
            <token postag=".*:(FEM|NOG).*" postag_regexp="yes"/>
        </equivalence>
        <equivalence type="neu">
            <token postag=".*:(NEU|NOG).*" postag_regexp="yes"/>
        </equivalence>
    </unification>

    <rule name="-jähriges UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_1">
        <pattern>
            <token regexp="yes">&zal_adj;iges</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:AKK:SIN:NEU:GRU:IND"/></disambig>
    </rule>
    <rule name="-jähriges UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_2">
        <pattern>
            <token regexp="yes">&zal_adj;iges</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:NOM:SIN:NEU:GRU:IND "/></disambig>
    </rule>
    <rule name="-jähriges UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_3">
        <pattern>
            <token regexp="yes">&zal_adj;iges</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:NOM:SIN:NEU:GRU:SOL "/></disambig>
    </rule>
    <rule name="-jähriges UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_4">
        <pattern>
            <token regexp="yes">&zal_adj;iges</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:AKK:SIN:NEU:GRU:SOL "/></disambig>
    </rule>
    <rule name="-jährige UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_5">
        <pattern>
            <token regexp="yes">&zal_adj;ige</token>
        </pattern>
        <disambig action="add"><wd pos=""/></disambig>
    </rule>
    <rule name="-jährige UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_6">
        <pattern>
            <token regexp="yes">&zal_adj;ige</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:AKK:PLU:FEM:GRU:SOL"/></disambig>
    </rule>
    <rule name="-jährige UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_7">
        <pattern>
            <token regexp="yes">&zal_adj;ige</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:AKK:PLU:FEM:GRU:SOL"/></disambig>
    </rule>
    <rule name="-jährige UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_8">
        <pattern>
            <token regexp="yes">&zal_adj;ige</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:AKK:PLU:MAS:GRU:SOL"/></disambig>
    </rule>
    <rule name="-jährige UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_9">
        <pattern>
            <token regexp="yes">&zal_adj;ige</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:AKK:PLU:NEU:GRU:SOL"/></disambig>
    </rule>
    <rule name="-jährige UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_10">
        <pattern>
            <token regexp="yes">&zal_adj;ige</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:AKK:SIN:FEM:GRU:DEF"/></disambig>
    </rule>
    <rule name="-jährige UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_11">
        <pattern>
            <token regexp="yes">&zal_adj;ige</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:AKK:SIN:FEM:GRU:IND"/></disambig>
    </rule>
    <rule name="-jährige UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_12">
        <pattern>
            <token regexp="yes">&zal_adj;ige</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:AKK:SIN:FEM:GRU:SOL"/></disambig>
    </rule>
    <rule name="-jährige UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_13">
        <pattern>
            <token regexp="yes">&zal_adj;ige</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:AKK:SIN:NEU:GRU:DEF"/></disambig>
    </rule>
    <rule name="-jährige UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_14">
        <pattern>
            <token regexp="yes">&zal_adj;ige</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:NOM:PLU:FEM:GRU:SOL"/></disambig>
    </rule>
    <rule name="-jährige UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_15">
        <pattern>
            <token regexp="yes">&zal_adj;ige</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:NOM:PLU:MAS:GRU:SOL"/></disambig>
    </rule>
    <rule name="-jährige UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_16">
        <pattern>
            <token regexp="yes">&zal_adj;ige</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:NOM:PLU:NEU:GRU:SOL"/></disambig>
    </rule>
    <rule name="-jährige UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_17">
        <pattern>
            <token regexp="yes">&zal_adj;ige</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:NOM:SIN:FEM:GRU:DEF"/></disambig>
    </rule>
    <rule name="-jährige UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_18">
        <pattern>
            <token regexp="yes">&zal_adj;ige</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:NOM:SIN:FEM:GRU:IND"/></disambig>
    </rule>
    <rule name="-jährige UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_19">
        <pattern>
            <token regexp="yes">&zal_adj;ige</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:NOM:SIN:FEM:GRU:SOL"/></disambig>
    </rule>
    <rule name="-jährige UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_20">
        <pattern>
            <token regexp="yes">&zal_adj;ige</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:NOM:SIN:MAS:GRU:DEF"/></disambig>
    </rule>
    <rule name="-jährige UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_21">
        <pattern>
            <token regexp="yes">&zal_adj;ige</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:NOM:SIN:NEU:GRU:DEF"/></disambig>
    </rule>
    <rule name="-jähriger UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_22">
        <pattern>
            <token regexp="yes">&zal_adj;iger</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:DAT:SIN:FEM:GRU:SOL"/></disambig>
    </rule>
    <rule name="-jähriger UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_23">
        <pattern>
            <token regexp="yes">&zal_adj;iger</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:GEN:PLU:FEM:GRU:SOL"/></disambig>
    </rule>
    <rule name="-jähriger UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_24">
        <pattern>
            <token regexp="yes">&zal_adj;iger</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:GEN:PLU:MAS:GRU:SOL"/></disambig>
    </rule>
    <rule name="-jähriger UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_25">
        <pattern>
            <token regexp="yes">&zal_adj;iger</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:GEN:PLU:NEU:GRU:SOL"/></disambig>
    </rule>
    <rule name="-jähriger UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_26">
        <pattern>
            <token regexp="yes">&zal_adj;iger</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:GEN:SIN:FEM:GRU:SOL"/></disambig>
    </rule>
    <rule name="-jähriger UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_27">
        <pattern>
            <token regexp="yes">&zal_adj;iger</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:NOM:SIN:MAS:GRU:IND"/></disambig>
    </rule>
    <rule name="-jähriger UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_28">
        <pattern>
            <token regexp="yes">&zal_adj;iger</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:NOM:SIN:MAS:GRU:SOL"/></disambig>
    </rule>
    <rule name="-jähriger UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_29">
        <pattern>
            <token regexp="yes">&zal_adj;iger</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:NOM:SIN:MAS:GRU:SOL "/></disambig>
    </rule>
    <rule name="-jährigen UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_30">
        <pattern>
            <token regexp="yes">&zal_adj;igen</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:AKK:PLU:FEM:GRU:DEF"/></disambig>
    </rule>
    <rule name="-jährigen UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_31">
        <pattern>
            <token regexp="yes">&zal_adj;igen</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:AKK:PLU:FEM:GRU:IND"/></disambig>
    </rule>
    <rule name="-jährigen UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_32">
        <pattern>
            <token regexp="yes">&zal_adj;igen</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:AKK:PLU:MAS:GRU:DEF"/></disambig>
    </rule>
    <rule name="-jährigen UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_33">
        <pattern>
            <token regexp="yes">&zal_adj;igen</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:AKK:PLU:MAS:GRU:IND"/></disambig>
    </rule>
    <rule name="-jährigen UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_34">
        <pattern>
            <token regexp="yes">&zal_adj;igen</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:AKK:PLU:NEU:GRU:DEF"/></disambig>
    </rule>
    <rule name="-jährigen UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_35">
        <pattern>
            <token regexp="yes">&zal_adj;igen</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:AKK:PLU:NEU:GRU:IND"/></disambig>
    </rule>
    <rule name="-jährigen UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_36">
        <pattern>
            <token regexp="yes">&zal_adj;igen</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:AKK:SIN:MAS:GRU:DEF"/></disambig>
    </rule>
    <rule name="-jährigen UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_37">
        <pattern>
            <token regexp="yes">&zal_adj;igen</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:AKK:SIN:MAS:GRU:IND"/></disambig>
    </rule>
    <rule name="-jährigen UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_38">
        <pattern>
            <token regexp="yes">&zal_adj;igen</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:AKK:SIN:MAS:GRU:SOL"/></disambig>
    </rule>
    <rule name="-jährigen UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_39">
        <pattern>
            <token regexp="yes">&zal_adj;igen</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:DAT:PLU:FEM:GRU:DEF"/></disambig>
    </rule>
    <rule name="-jährigen UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_40">
        <pattern>
            <token regexp="yes">&zal_adj;igen</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:DAT:PLU:FEM:GRU:IND"/></disambig>
    </rule>
    <rule name="-jährigen UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_41">
        <pattern>
            <token regexp="yes">&zal_adj;igen</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:DAT:PLU:FEM:GRU:SOL"/></disambig>
    </rule>
    <rule name="-jährigen UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_42">
        <pattern>
            <token regexp="yes">&zal_adj;igen</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:DAT:PLU:MAS:GRU:DEF"/></disambig>
    </rule>
    <rule name="-jährigen UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_43">
        <pattern>
            <token regexp="yes">&zal_adj;igen</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:DAT:PLU:MAS:GRU:IND"/></disambig>
    </rule>
    <rule name="-jährigen UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_44">
        <pattern>
            <token regexp="yes">&zal_adj;igen</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:DAT:PLU:MAS:GRU:SOL"/></disambig>
    </rule>
    <rule name="-jährigen UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_45">
        <pattern>
            <token regexp="yes">&zal_adj;igen</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:DAT:PLU:NEU:GRU:DEF"/></disambig>
    </rule>
    <rule name="-jährigen UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_46">
        <pattern>
            <token regexp="yes">&zal_adj;igen</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:DAT:PLU:NEU:GRU:IND"/></disambig>
    </rule>
    <rule name="-jährigen UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_47">
        <pattern>
            <token regexp="yes">&zal_adj;igen</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:DAT:PLU:NEU:GRU:SOL"/></disambig>
    </rule>
    <rule name="-jährigen UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_48">
        <pattern>
            <token regexp="yes">&zal_adj;igen</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:DAT:SIN:FEM:GRU:DEF"/></disambig>
    </rule>
    <rule name="-jährigen UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_49">
        <pattern>
            <token regexp="yes">&zal_adj;igen</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:DAT:SIN:FEM:GRU:IND"/></disambig>
    </rule>
    <rule name="-jährigen UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_50">
        <pattern>
            <token regexp="yes">&zal_adj;igen</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:DAT:SIN:MAS:GRU:DEF"/></disambig>
    </rule>
    <rule name="-jährigen UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_51">
        <pattern>
            <token regexp="yes">&zal_adj;igen</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:DAT:SIN:MAS:GRU:IND"/></disambig>
    </rule>
    <rule name="-jährigen UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_52">
        <pattern>
            <token regexp="yes">&zal_adj;igen</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:DAT:SIN:NEU:GRU:DEF"/></disambig>
    </rule>
    <rule name="-jährigen UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_53">
        <pattern>
            <token regexp="yes">&zal_adj;igen</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:DAT:SIN:NEU:GRU:IND"/></disambig>
    </rule>
    <rule name="-jährigen UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_54">
        <pattern>
            <token regexp="yes">&zal_adj;igen</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:GEN:PLU:FEM:GRU:DEF"/></disambig>
    </rule>
    <rule name="-jährigen UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_55">
        <pattern>
            <token regexp="yes">&zal_adj;igen</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:GEN:PLU:FEM:GRU:IND"/></disambig>
    </rule>
    <rule name="-jährigen UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_56">
        <pattern>
            <token regexp="yes">&zal_adj;igen</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:GEN:PLU:MAS:GRU:DEF"/></disambig>
    </rule>
    <rule name="-jährigen UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_57">
        <pattern>
            <token regexp="yes">&zal_adj;igen</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:GEN:PLU:MAS:GRU:IND"/></disambig>
    </rule>
    <rule name="-jährigen UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_58">
        <pattern>
            <token regexp="yes">&zal_adj;igen</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:GEN:PLU:NEU:GRU:DEF"/></disambig>
    </rule>
    <rule name="-jährigen UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_59">
        <pattern>
            <token regexp="yes">&zal_adj;igen</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:GEN:PLU:NEU:GRU:IND"/></disambig>
    </rule>
    <rule name="-jährigen UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_60">
        <pattern>
            <token regexp="yes">&zal_adj;igen</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:GEN:SIN:FEM:GRU:DEF"/></disambig>
    </rule>
    <rule name="-jährigen UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_61">
        <pattern>
            <token regexp="yes">&zal_adj;igen</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:GEN:SIN:FEM:GRU:IND"/></disambig>
    </rule>
    <rule name="-jährigen UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_62">
        <pattern>
            <token regexp="yes">&zal_adj;igen</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:GEN:SIN:MAS:GRU:DEF"/></disambig>
    </rule>
    <rule name="-jährigen UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_63">
        <pattern>
            <token regexp="yes">&zal_adj;igen</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:GEN:SIN:MAS:GRU:IND"/></disambig>
    </rule>
    <rule name="-jährigen UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_64">
        <pattern>
            <token regexp="yes">&zal_adj;igen</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:GEN:SIN:MAS:GRU:SOL"/></disambig>
    </rule>
    <rule name="-jährigen UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_65">
        <pattern>
            <token regexp="yes">&zal_adj;igen</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:GEN:SIN:NEU:GRU:DEF"/></disambig>
    </rule>
    <rule name="-jährigen UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_66">
        <pattern>
            <token regexp="yes">&zal_adj;igen</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:GEN:SIN:NEU:GRU:IND"/></disambig>
    </rule>
    <rule name="-jährigen UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_67">
        <pattern>
            <token regexp="yes">&zal_adj;igen</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:GEN:SIN:NEU:GRU:SOL"/></disambig>
    </rule>
    <rule name="-jährigen UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_68">
        <pattern>
            <token regexp="yes">&zal_adj;igen</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:NOM:PLU:FEM:GRU:DEF"/></disambig>
    </rule>
    <rule name="-jährigen UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_69">
        <pattern>
            <token regexp="yes">&zal_adj;igen</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:NOM:PLU:FEM:GRU:IND"/></disambig>
    </rule>
    <rule name="-jährigen UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_70">
        <pattern>
            <token regexp="yes">&zal_adj;igen</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:NOM:PLU:MAS:GRU:DEF"/></disambig>
    </rule>
    <rule name="-jährigen UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_71">
        <pattern>
            <token regexp="yes">&zal_adj;igen</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:NOM:PLU:MAS:GRU:IND"/></disambig>
    </rule>
    <rule name="-jährigen UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_72">
        <pattern>
            <token regexp="yes">&zal_adj;igen</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:NOM:PLU:NEU:GRU:DEF"/></disambig>
    </rule>
    <rule name="-jährigen UNKNOWN -> ADJ" id="NUMBER_COMPOUND_ADJECTIVE_73">
        <pattern>
            <token regexp="yes">&zal_adj;igen</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:NOM:PLU:NEU:GRU:IND"/></disambig>
    </rule>

    <!-- ============================================================================================================== -->
    <!-- Noun phrases unification -->
    <!-- ============================================================================================================== -->
    <rulegroup id="UNIFY_PRP_DET_SUB" name="NP with preposition unify">
        <rule>
            <pattern>
                <token postag_regexp="yes" postag="PRP.+">
                    <exception postag="PRP.+" postag_regexp="yes" negate_pos="yes"/>
                    <exception scope="previous">was</exception>
                </token>
                <marker>
                    <and>
                        <token postag_regexp="yes" postag=".+NOM:.+"></token>
                        <token postag_regexp="yes" postag=".+(AKK|DAT|GEN):.+"></token>
                    </and>
                </marker>
            </pattern>
            <disambig action="remove" postag=".+:NOM:.+"/>
            <example type="ambiguous" inputform="die[der/ART:DEF:AKK:PLU:FEM,der/ART:DEF:AKK:PLU:MAS,der/ART:DEF:AKK:PLU:NEU,der/ART:DEF:AKK:SIN:FEM,der/ART:DEF:NOM:PLU:FEM,der/ART:DEF:NOM:PLU:MAS,der/ART:DEF:NOM:PLU:NEU,der/ART:DEF:NOM:SIN:FEM,der/PRO:DEM:AKK:PLU:ALG,der/PRO:DEM:AKK:SIN:FEM,der/PRO:DEM:NOM:PLU:ALG,der/PRO:DEM:NOM:SIN:FEM,der/PRO:PER:AKK:PLU:ALG,der/PRO:PER:AKK:SIN:FEM,der/PRO:PER:NOM:PLU:ALG,der/PRO:PER:NOM:SIN:FEM]" outputform="die[der/ART:DEF:AKK:PLU:FEM,der/ART:DEF:AKK:PLU:MAS,der/ART:DEF:AKK:PLU:NEU,der/ART:DEF:AKK:SIN:FEM,der/PRO:DEM:AKK:PLU:ALG,der/PRO:DEM:AKK:SIN:FEM,der/PRO:PER:AKK:PLU:ALG,der/PRO:PER:AKK:SIN:FEM]">Ein gutes Argument für <marker>die</marker> Politik, ...</example>
            <example type="untouched">Er ist eher ein Lehrer, als ein Schriftsteller.</example>
            <example type="untouched">Was für ein großer Supermarkt!</example>
            <example type="untouched">Während der größte Teil unter Emission von Beta-Teilchen...</example>
            <example type="untouched">Dabei zerfallen sie so lange, bis ein stabiler Kern erreicht ist;</example>
            <example type="untouched">Hier ist nach wie vor der Unterschied bedeutsam.</example>
        </rule>
    </rulegroup>

    <rule name="NP unify 1" id="UNIFY_DET_SUB">
        <!--
        z.B. in "Das Kind, das Kuchen isst." wird 'das Kind' unifiziert, 'das Kuchen' aber nicht.
        So können wir weiter unten Nominalphrasen erkennen und in grammar.xml dann Regeln haben
        für z.B. "Das Haus sind groß."
        Die Erkennung von Fehlern *innerhalb* von Nominalphrasen (z.B. "der Auto") liegt bei der
        Java-Regel AgreementRule.
        -->
        <pattern>
            <unify>
                <feature id="number"/><feature id="case"/><feature id="gender"/>
                <token regexp="yes">d(e[nr]|ie|as|iese[rs])|eine?|sein|ihr</token>
                <token postag="SUB:.*" postag_regexp="yes">
                    <exception postag_regexp="yes" postag="ADJ:.*"/><!-- needed for AgreementRule to not false alert on 'den Berliner Arbeitern' -->
                </token>
            </unify>
        </pattern>
        <disambig action="unify"/>
    </rule>
    <rule name="NP unify 1b" id="UNIFY_DET_SUB2">
        <pattern>
            <unify>
                <feature id="number"/><feature id="case"/><feature id="gender"/>
                <!--"beiden Filmen", but: "dass sie Geliebte waren"-->
                <token postag="(PRO|ART):.*" postag_regexp="yes"><exception>sie</exception></token>
                <token postag="SUB:.*" postag_regexp="yes"><exception postag="ADJ:.*" postag_regexp="yes"/></token>
            </unify>
        </pattern>
        <disambig action="unify"/>
    </rule>
    <!-- TODO: this would fix false alarm for 'die ältere der beiden Töchter' but causes other problems
    <rule name="NP unify 1c" id="UNIFY_DET_ADJ">
        <pattern>
                <unify>
                    <feature id="number"/><feature id="case"/><feature id="gender"/>
                    "die ältere [der beiden]"
                    <token regexp="yes">d(er|ie|as)</token>
                    <token postag="ADJ.*:(DEF|IND).*" postag_regexp="yes"/>
                </unify>
        </pattern>
        <disambig action="unify"/>
    </rule>
    -->
    <rule name="NP unify 2" id="UNIFY_DET_ADJ_ADJ_SUB">
        <pattern>
            <unify>
                <feature id="number"/><feature id="case"/><feature id="gender"/>
                <token regexp="yes">d(e[nr]|ie|as|iese[rs])|eine?|sein|ihr</token>
                <token postag="ADJ:.*" postag_regexp="yes"/>
                <token postag="ADJ:.*" postag_regexp="yes"/>
                <token postag="SUB:.*" postag_regexp="yes"/>
            </unify>
        </pattern>
        <disambig action="unify"/>
    </rule>
    <rule name="NP unify 2b" id="UNIFY_DET_ADJ_UND_ADJ_SUB">
        <pattern>
            <unify>
                <!-- "Der größte und schönste Tempel" -->
                <feature id="number"/><feature id="case"/><feature id="gender"/>
                <token regexp="yes">d(e[mnrs]|ie|as|iese[mnrs])|[dm]?ein(e[mns]?)?|sein(e[mnr]?)?|ihr(e[mnr]?)?</token>
                <token postag="ADJ:.*" postag_regexp="yes"/>
                <unify-ignore>
                    <token regexp="yes">oder|und</token>
                </unify-ignore>
                <token postag="ADJ:.*" postag_regexp="yes"/>
                <token postag="SUB:.*" postag_regexp="yes"/>
            </unify>
        </pattern>
        <disambig action="unify"/>
    </rule>
    <rule name="NP unify 3" id="UNIFY_DET_ADJ_SUB">
        <pattern>
            <unify>
                <feature id="number"/><feature id="case"/><feature id="gender"/>
                <token regexp="yes">d(e[mnrs]|ie|as|iese[mnrs])|[dm]?ein(e[mns]?)?|sein(e[mnr]?)?|ihr(e[mnr]?)?</token>
                <token postag="ADJ:.*|PA[12]:.+" postag_regexp="yes"/>
                <token postag="SUB:.*" postag_regexp="yes"/>
            </unify>
        </pattern>
        <disambig action="unify"/>
    </rule>
    <rule name="NP unify 3a" id="UNIFY_DET_ADJ_PCT_PA_SUB">
        <pattern>
            <unify>
                <feature id="number"/><feature id="case"/><feature id="gender"/>
                <token regexp="yes">d(e[mnrs]|ie|as|iese[mnrs])|[dm]?ein(e[mns]?)?|sein(e[mnr]?)?|ihr(e[mnr]?)?</token>
                <token postag="ADJ:.*" postag_regexp="yes"/>
                <unify-ignore>
                    <token regexp="yes">,|und|oder</token>
                </unify-ignore>
                <token postag="PA[12]:.*" postag_regexp="yes"/>
                <token postag="SUB:.*" postag_regexp="yes"/>
            </unify>
        </pattern>
        <disambig action="unify"/>
        <!-- Er sah <marker>den kleinen, geschundenen Körper</marker>  -->
    </rule>
    <rule name="NP unify 3a1" id="UNIFY_DET_ADJ_PA_SUB">
        <pattern>
            <unify>
                <feature id="number"/><feature id="case"/><feature id="gender"/>
                <token regexp="yes">d(e[mnrs]|ie|as|iese[mnrs])|[dm]?ein(e[mns]?)?|sein(e[mnr]?)?|ihr(e[mnr]?)?</token>
                <unify-ignore>
                    <token postag="ADJ:PRD:GRU"/>
                </unify-ignore>
                <token postag="PA[12]:.*" postag_regexp="yes"/>
                <token postag="SUB:.*" postag_regexp="yes"/>
            </unify>
        </pattern>
        <disambig action="unify"/>
        <!-- Er sah <marker>den gut erhaltenen Koffer</marker>  -->
    </rule>
    <rule name="NP unify 3b" id="UNIFY_ADJ_SUB">
        <pattern>
            <unify>
                <feature id="number"/><feature id="case"/><feature id="gender"/>
                <!-- "Am Strand stehen schöne Häuser"-->
                <token postag="ADJ:.*" postag_regexp="yes"><exception>liebe</exception></token>
                <token postag="SUB:.*" postag_regexp="yes"><exception postag="ADJ:.+:SOL" postag_regexp="yes" regexp="yes">[A-Z].+</exception></token>
            </unify>
        </pattern>
        <disambig action="unify"/>
        <example type="untouched">Gegen eine schwache Wiener Austria holte das Schlusslicht einen 1:0-Heimerfolg.</example>
        <example type="untouched">Ich liebe Lachs.</example>
    </rule>

    <rule name="NP unify 4" id="UNIFY_4">
        <pattern>
            <unify>
                <feature id="number"/><feature id="case"/><feature id="gender"/>
                <!-- "Die von der Regierung geprüften Hunde" -->
                <token regexp="yes">d(e[nr]|ie|as|iese[rs])|eine?|sein|ihr</token>
                <unify-ignore>
                    <token postag="PRP:.*" postag_regexp="yes"/>
                    <token regexp="yes">d(e[nr]|ie|as|iese[rs])|eine?|sein|ihr</token>
                    <!--<token postag="ADJ:.*" postag_regexp="yes"/>-->
                    <token postag="SUB:.*" postag_regexp="yes"/>
                </unify-ignore>
                <token postag="PA[12]:.*" postag_regexp="yes"/>
                <token postag="SUB:.*" postag_regexp="yes"/>
            </unify>
        </pattern>
        <disambig action="unify"/>
    </rule>

    <rule name=".,;:…!? UNKNOWN -> PKT" id="UNKNOWN_PKT">
        <pattern>
            <token regexp="yes">[\.,;:…!\?]</token>
        </pattern>
        <disambig action="add"><wd pos="PKT"/></disambig>
    </rule>

    <rule name="60ern -> SUB" id="NUMBER_COMPOUND_NOUN_1">
        <pattern>
            <token regexp="yes">\d{2,4}ern</token>
        </pattern>
        <disambig action="add"><wd pos="SUB:AKK:PLU:FEM"/></disambig>
    </rule>
    <rule name="60ern -> SUB" id="NUMBER_COMPOUND_NOUN_2">
        <pattern>
            <token regexp="yes">\d{2,4}ern</token>
        </pattern>
        <disambig action="add"><wd pos="SUB:DAT:PLU:FEM"/></disambig>
    </rule>
    <rule name="60er -> SUB" id="NUMBER_COMPOUND_NOUN_3">
        <pattern>
            <token regexp="yes">\d{2,4}er</token>
        </pattern>
        <disambig action="add"><wd pos="SUB:NOM:PLU:FEM"/></disambig>
    </rule>
    <rule name="60er -> SUB" id="NUMBER_COMPOUND_NOUN_4">
        <pattern>
            <token regexp="yes">\d{2,4}er</token>
        </pattern>
        <disambig action="add"><wd pos="SUB:GEN:PLU:FEM"/></disambig>
    </rule>
    <!-- Treat "60er" in "in den 60er Jahren" as adjective -->
    <rule name="60er -> ADJ" id="NUMBER_COMPOUND_ADJ_1">
        <pattern>
            <token regexp="yes">\d{2,4}er</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:DAT:PLU:NEU:GRU:DEF"/></disambig>
    </rule>
    <rule name="60er -> ADJ" id="NUMBER_COMPOUND_ADJ_2">
        <pattern>
            <token regexp="yes">\d{2,4}er</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:DAT:PLU:NEU:GRU:IND"/></disambig>
    </rule>
    <rule name="60er -> ADJ" id="NUMBER_COMPOUND_ADJ_3">
        <pattern>
            <token regexp="yes">\d{2,4}er</token>
        </pattern>
        <disambig action="add"><wd pos="ADJ:DAT:PLU:NEU:GRU:SOL"/></disambig>
    </rule>
    <rule name="lebenswerten (VER) -> lebenswerten ()" id="LEBENSWERTEN">
        <pattern>
            <marker>
                <!-- l(eb|ohn)enswerten?|achtenswerten?|ehrenswerten?|rühmenswerten?|schützenswerten? -->
                <token regexp="yes" case_sensitive="yes">[a-zäöü]+enswerten?</token>
            </marker>
        </pattern>
        <disambig action="remove" postag="VER:.+"/>
    </rule>
    <rule name="ins+Nomen" id="INS_NOMEN">
        <pattern case_sensitive="yes">
            <token regexp="yes">ins|ans|vors|durchs|hinters</token>
            <marker>
                <token regexp="yes">[A-ZÄÖÜ].+<exception postag="SUB:.+" postag_regexp="yes"/></token>
            </marker>
            <token postag="VER:[1-3].+" postag_regexp="yes"/>
        </pattern>
        <disambig postag="SUB:AKK:SIN:NEU"/>
    </rule>
    <rule name="'Der' am Satzanfang (kein Genitiv Singular)" id="SENT_START_DER">
        <pattern case_sensitive="yes">
            <token postag="SENT_START"></token>
            <marker>
                <token>Der</token>
            </marker>
        </pattern>
        <disambig action="remove" postag="ART:DEF:GEN:SIN:FEM"/>
        <example type="ambiguous" inputform="Der[der/ART:DEF:DAT:SIN:FEM,der/ART:DEF:GEN:SIN:FEM,der/PRO:DEM:DAT:SIN:FEM]" outputform="Der[der/ART:DEF:DAT:SIN:FEM,der/PRO:DEM:DAT:SIN:FEM]"><marker>Der</marker> Frau wurden die Stoffe gezeigt.</example>
    </rule>
    <rulegroup id="ICH_VERB" name="Ich am Satzanfang">
        <rule>
            <pattern>
                <token postag="SENT_START"></token>
                <token case_sensitive="yes">Ich</token>
                <marker>
                    <token postag="VER:.*1:SIN:.+" postag_regexp="yes" regexp="yes" case_sensitive="yes">[a-zäöü]+e</token>
                </marker>
            </pattern>
            <disambig action="remove" postag="VER.*:(3|IMP):.+"/>
            <example type="ambiguous" inputform="sage[sagen/VER:1:SIN:KJ1:SFT,sagen/VER:1:SIN:PRÄ:SFT,sagen/VER:3:SIN:KJ1:SFT,sagen/VER:IMP:SIN:SFT]" outputform="sage[sagen/VER:1:SIN:KJ1:SFT,sagen/VER:1:SIN:PRÄ:SFT]">Ich <marker>sage</marker> ihr die Wahrheit.</example>
        </rule>
        <rule name="Ich am Satzanfang" id="ICH_SENT_START">
            <pattern case_sensitive="yes">
                <token postag="SENT_START"/>
                <marker>
                    <token>Ich</token>
                </marker>
                <token postag="VER:1:.+" postag_regexp="yes"/>
            </pattern>
            <disambig action="remove" postag="SUB:.*:NEU"/>
        </rule>
    </rulegroup>
    <rulegroup name="VER -> PA2" id="VER_PA2">
        <rule>
            <pattern case_sensitive="yes">
                <token inflected="yes" skip="10">sein
                    <exception>sein</exception>
                    <exception postag="PKT" scope="next"></exception>
                </token>
                <marker>
                    <and>
                        <token postag="VER:PA2:.+" postag_regexp="yes"/>
                        <token postag="VER:[123].+" postag_regexp="yes"/>
                    </and>
                </marker>
                <token>worden</token>
                <token postag="PKT"></token>
            </pattern>
            <disambig action="filter" postag="VER:PA2:.+"/>
            <example type="ambiguous" inputform="verhaftet[verhaften/VER:2:PLU:KJ1:SFT,verhaften/VER:2:PLU:PRÄ:SFT,verhaften/VER:3:SIN:PRÄ:SFT,verhaften/VER:IMP:PLU:SFT,verhaften/VER:PA2:SFT,verhaftet/PA2:PRD:GRU:VER]" outputform="verhaftet[verhaften/VER:PA2:SFT]">Er ist gestern <marker>verhaftet</marker> worden.</example>
        </rule>
        <rule>
            <pattern case_sensitive="yes">
                <token regexp="yes" skip="2">wurde(n|st)?</token>
                <marker>
                    <and>
                        <token postag="VER:PA2:.+" postag_regexp="yes"/>
                        <token postag="VER:[123].+" postag_regexp="yes"/>
                    </and>
                </marker>
                <token postag="PKT"></token>
            </pattern>
            <disambig action="filter" postag="VER:PA2.*"/>
            <example type="ambiguous" inputform="verhaftet[verhaften/VER:2:PLU:KJ1:SFT,verhaften/VER:2:PLU:PRÄ:SFT,verhaften/VER:3:SIN:PRÄ:SFT,verhaften/VER:IMP:PLU:SFT,verhaften/VER:PA2:SFT,verhaftet/PA2:PRD:GRU:VER]" outputform="verhaftet[verhaften/VER:PA2:SFT]">Er wurde gestern <marker>verhaftet</marker>.</example>
        </rule>
    </rulegroup>
    <rulegroup name="um...zu -> um (KON:INF)" id="UM_KON_INF">
        <rule>
            <pattern case_sensitive="yes">
                <token>,</token>
                <marker>
                    <token skip="7">um<exception scope="next">,</exception></token>
                </marker>
                <token>zu</token>
                <token postag="VER:INF:.+" postag_regexp="yes"/>
                <token postag="PKT"/>
            </pattern>
            <disambig action="filter" postag="KON:INF"/>
            <example type="ambiguous" inputform="um[um/ADV:TMP+MOD,um/KON:INF,um/KON:PRI,um/PRP:LOK+TMP+CAU:AKK,um/ZUS]" outputform="um[um/KON:INF]">Sie tat dies, <marker>um</marker> ihm zu helfen.</example>
        </rule>
        <rule>
            <pattern case_sensitive="yes">
                <token>,</token>
                <marker>
                    <token skip="5">um</token>
                </marker>
                <token postag="VER:EIZ:.+" postag_regexp="yes"/>
                <token postag="PKT"/>
            </pattern>
            <disambig action="filter" postag="KON:INF"/>
            <example type="ambiguous" inputform="um[um/ADV:TMP+MOD,um/KON:INF,um/KON:PRI,um/PRP:LOK+TMP+CAU:AKK,um/ZUS]" outputform="um[um/KON:INF]">Sie tat dies, <marker>um</marker> seine Freilassung sicherzustellen.</example>
        </rule>
    </rulegroup>
    <rulegroup name="Präposition / Verbzusatz" id="PRP_ZUS">
        <rule>
            <pattern case_sensitive="yes">
                <marker>
                    <and>
                        <token postag="ZUS"></token>
                        <token postag_regexp="yes" postag="PRP:.+"></token>
                    </and>
                </marker>
                <token>,</token>
                <token postag="KON:UNT"/>
            </pattern>
            <disambig action="filter" postag="PRP:.+"/>
            <example type="ambiguous" inputform="zu[zu/ADV:MOD,zu/PRP:LOK+TMP+CAU+MOD:DAT+AKK,zu/ZUS]" outputform="zu[zu/PRP:LOK+TMP+CAU+MOD:DAT+AKK]">Sie gab <marker>zu</marker>, dass sie im Unrecht war.</example>
        </rule>
        <rule>
            <pattern case_sensitive="yes">
                <token postag_regexp="yes" postag="VER:[123]:.+" skip="-1"/>
                <marker>
                    <and>
                        <token postag="ZUS"></token>
                        <token postag_regexp="yes" postag="PRP:.+"></token>
                    </and>
                </marker>
                <token postag="SENT_END" regexp="yes">\W</token>
            </pattern>
            <disambig action="filter" postag="ZUS"/>
            <example type="ambiguous" inputform="zu[zu/ADV:MOD,zu/PRP:LOK+TMP+CAU+MOD:DAT+AKK,zu/ZUS]" outputform="zu[zu/ZUS]">Sie gab es <marker>zu</marker>.</example>
        </rule>
    </rulegroup>
    <rule name="WORKAROUND_GH_635" id="WORKAROUND_GH_635">
        <!-- workaround for github issue mentioned in  https://github.com/languagetool-org/languagetool/issues/635 -->
        <pattern case_sensitive="yes">
            <marker>
                <token>-</token>
            </marker>
        </pattern>
        <disambig action="remove" postag=".+"/>
    </rule>
    <rule name="FIDEL" id="FIDEL">
        <pattern case_sensitive="yes">
            <marker>
                <token>Fidel</token>
            </marker>
            <token regexp="yes">Castros?</token>
        </pattern>
        <disambig action="remove" postag=".+:FEM"/>
    </rule>
    <rule id="HOCHDRAMATISCH" name="kein Verb: charismatischen / hochdramatischen">
        <pattern case_sensitive="yes">
            <marker>
                <token inflected="yes" regexp="yes">(charis|hochdra)matischen|minimalistischen</token>
            </marker>
        </pattern>
        <disambig action="remove" postag="VER:.+"/>
    </rule>
    <rule id="FASSUNGSLOS" name="kein Substantiv: Fassungslos">
        <pattern case_sensitive="yes">
            <token>
                <exception postag="SENT_START"/>
                <exception regexp="yes">\W</exception>
            </token>
            <marker>
                <token postag="SUB:.+" postag_regexp="yes" regexp="yes">[A-Z][a-zäöüß]+ungslose?</token>
            </marker>
        </pattern>
        <disambig postag="ADJ:PRD:GRU"/>
        <example type="untouched">„Fassungslos bestieg sie das Schiff.“</example>
        <example type="untouched">Erbarmungslos bestieg sie das Schiff.</example>
    </rule>
    <rule id="BITTE" name="kein Verb: 'bitte' am Satzende">
        <pattern case_sensitive="yes">
            <marker>
                <token>bitte</token>
            </marker>
            <token postag="PKT" regexp="yes">[\.!]</token>
        </pattern>
        <disambig action="remove" postag="VER:.+"/>
        <example type="untouched">Und wenn ich dich ganz lieb bitte?</example>
    </rule>
    <rule id="EINIGE" name="kein Verb: 'einige' nach Verb">
        <pattern case_sensitive="yes">
            <token postag="VER:.+" postag_regexp="yes" skip="5"><exception scope="next" postag="PKT"/></token>
            <marker>
                <token>einige</token>
            </marker>
        </pattern>
        <disambig action="remove" postag="VER:.+"/>
        <!-- Sie hat <marker>einige</marker> wichtige Dokumente vorbeigebracht-->
    </rule>
    <rule id="RECHTSCHAFFEN" name="kein Verb: rechtschaffen">
        <pattern case_sensitive="yes">
            <marker>
                <token>rechtschaffen</token>
            </marker>
        </pattern>
        <disambig action="remove" postag="VER:.+"/>
    </rule>
    <rule id="SUBSTANTIVIERTES_VERB" name="kein Verb: substantiviertes Verb">
        <pattern case_sensitive="yes">
            <token postag="PRP:LOK:DAT|ART:DEF:.+:NEU" postag_regexp="yes"/>
            <marker>
                    <and>
                        <token postag_regexp="yes" postag="SUB:.+:INF" regexp="yes">[A-ZÄÖÜ].+</token>
                        <token postag_regexp="yes" postag="VER:INF.+"></token>
                    </and>
            </marker>
        </pattern>
        <disambig action="remove" postag="VER:.+"/>
    </rule>
    <rule id="SEIN_PA2" name="PA2 nach 'sein'">
        <pattern case_sensitive="yes">
            <token inflected="yes">sein</token>
            <marker>
                <token postag=".*PA2:.+" postag_regexp="yes"/>
            </marker>
            <token postag="PKT"/>
        </pattern>
        <disambig action="remove" postag="VER:[1-3I].+"/>
        <example type="ambiguous" inputform="belegt[belegen/VER:2:PLU:PRÄ:SFT,belegen/VER:3:SIN:PRÄ:SFT,belegen/VER:IMP:PLU:SFT,belegen/VER:PA2:SFT,belegt/PA2:PRD:GRU:VER]" outputform="belegt[belegen/VER:PA2:SFT,belegt/PA2:PRD:GRU:VER]">Gleichzeitig ist <marker>belegt</marker>, dass .</example>
    </rule>
    <rule id="ZU_MIT_INFINITIV" name="Infinitiv nach 'zu'">
        <pattern case_sensitive="yes">
            <token>zu</token>
            <marker>
                <token postag="VER:INF:.+" postag_regexp="yes"/>
            </marker>
            <token postag="PKT|KON:NEB" postag_regexp="yes"/>
        </pattern>
        <disambig action="remove" postag="VER:[1-3]:.+"/>
        <example type="ambiguous" inputform="sehen[sehen/VER:1:PLU:KJ1:NON,sehen/VER:1:PLU:PRÄ:NON,sehen/VER:3:PLU:KJ1:NON,sehen/VER:3:PLU:PRÄ:NON,sehen/VER:INF:NON]" outputform="sehen[sehen/VER:INF:NON]">Sie kommen, um dich zu <marker>sehen</marker>.</example>
        <example type="ambiguous" inputform="sehen[sehen/VER:1:PLU:KJ1:NON,sehen/VER:1:PLU:PRÄ:NON,sehen/VER:3:PLU:KJ1:NON,sehen/VER:3:PLU:PRÄ:NON,sehen/VER:INF:NON]" outputform="sehen[sehen/VER:INF:NON]">"Sie kommen, um dich zu <marker>sehen</marker>."</example>
        <example type="ambiguous" inputform="sehen[sehen/VER:1:PLU:KJ1:NON,sehen/VER:1:PLU:PRÄ:NON,sehen/VER:3:PLU:KJ1:NON,sehen/VER:3:PLU:PRÄ:NON,sehen/VER:INF:NON]" outputform="sehen[sehen/VER:INF:NON]">Sie kommen, um dich zu <marker>sehen</marker> und dich zu pflegen.</example>
    </rule>
    <rule id="MODALVERB_MIT_INFINITIV" name="Infinitiv mit Modalverb">
        <pattern case_sensitive="yes">
            <marker>
                <token postag_regexp="yes" postag="VER:INF:.+"></token>
            </marker>
            <token postag_regexp="yes" postag="VER:(AUX|MOD):[1-3]:SIN:.+"></token>
        </pattern>
        <disambig action="remove" postag="VER:[1-3]:.+"/>
        <example type="ambiguous" inputform="sehen[sehen/VER:1:PLU:KJ1:NON,sehen/VER:1:PLU:PRÄ:NON,sehen/VER:3:PLU:KJ1:NON,sehen/VER:3:PLU:PRÄ:NON,sehen/VER:INF:NON]" outputform="sehen[sehen/VER:INF:NON]">Ich glaube nicht , dass er es <marker>sehen</marker> wird.</example>
    </rule>
    <rule id="MODALVERB_MIT_INFINITIV_2" name="Infinitiv mit Modalverb">
        <pattern case_sensitive="yes">
            <token postag_regexp="yes" postag="VER:(AUX|MOD):[1-3]:SIN:.+"></token>
            <marker>
                <token postag_regexp="yes" postag="VER:INF:.+"></token>
            </marker>
        </pattern>
        <disambig action="remove" postag="VER:[1-3]:.+"/>
        <example type="ambiguous" inputform="sehen[sehen/VER:1:PLU:KJ1:NON,sehen/VER:1:PLU:PRÄ:NON,sehen/VER:3:PLU:KJ1:NON,sehen/VER:3:PLU:PRÄ:NON,sehen/VER:INF:NON]" outputform="sehen[sehen/VER:INF:NON]">Er kann <marker>sehen</marker>.</example>
    </rule>
    <rule id="RIW" name="Reit im Winkl">
        <pattern case_sensitive="yes">
            <marker>
                <token>Reit</token>
            </marker>
            <token>im</token>
            <token>Winkl</token>
        </pattern>
        <disambig action="remove" postag="VER:.+"/>
    </rule>
    <rule id="WUERDIGE" name="eine würdige (keine Verbform)">
        <pattern case_sensitive="yes">
            <token regexp="yes">[kdms]?eine|die(se)?|viele</token>
            <marker>
                <token>würdige</token>
            </marker>
        </pattern>
        <disambig action="remove" postag="VER:.+"/>
    </rule>
    <rule id="ZAHLEN" name="Zahlen">
        <pattern case_sensitive="yes">
            <marker>
                <token regexp="yes">(zw(ei|an)|dreiß?|vier|fünf|sechs?|sieb(en)?|acht|neun)(zehn|zig|hundert|tausend){0,2}((und)?(eins?|zwei|zwan|dreiß?|vier|fünf|sechs|sieb(en)?|acht|neun)(.*zehn|.*zig)?)?<exception postag="ZAL"/></token>
            </marker>
        </pattern>
        <disambig action="add"><wd pos="ZAL"/></disambig>
        <example type="ambiguous" inputform="achtzig[achtzig]" outputform="achtzig[achtzig/ZAL]">Er hat <marker>achtzig</marker> Pfennige.</example>
    </rule>
    <!--<rule id="ZAHLEN_2" name="Zahlen (2)">
        <pattern case_sensitive="yes">
            <marker>
                <token regexp="yes">\d+</token>
            </marker>
        </pattern>
        <disambig action="add"><wd pos="ZAL"/></disambig>
    </rule>-->
    <rulegroup id="KOENNEN" name="Können">
        <rule>
            <pattern>
                <token regexp="yes">\W</token>
                <marker>
                    <token case_sensitive="yes">Können</token>
                </marker>
            </pattern>
            <disambig action="add"><wd lemma="können" pos="VER:MOD:1:PLU:KJ1">können</wd></disambig>
        </rule>
        <rule>
            <pattern>
                <token regexp="yes">\W</token>
                <marker>
                    <token case_sensitive="yes">Können</token>
                </marker>
            </pattern>
            <disambig action="add"><wd lemma="können" pos="VER:MOD:1:PLU:PRÄ">können</wd></disambig>
        </rule>
        <rule>
            <pattern>
                <token regexp="yes">\W</token>
                <marker>
                    <token case_sensitive="yes">Können</token>
                </marker>
            </pattern>
            <disambig action="add"><wd lemma="können" pos="VER:MOD:3:PLU:KJ1">können</wd></disambig>
        </rule>
        <rule>
            <pattern>
                <token regexp="yes">\W</token>
                <marker>
                    <token case_sensitive="yes">Können</token>
                </marker>
            </pattern>
            <disambig action="add"><wd lemma="können" pos="VER:MOD:3:PLU:PRÄ">können</wd></disambig>
        </rule>
    </rulegroup>
    <rulegroup id="KONJUNKTIV" name="Konjunktiv">
        <rule>
            <pattern>
                <token regexp="yes">e[rs]|sie</token>
                <marker>
                    <token postag="VER:.*3:SIN:.+" postag_regexp="yes" regexp="yes" case_sensitive="yes">[a-zäöü]+e</token>
                </marker>
            </pattern>
            <disambig action="remove" postag="VER.*:1:.+"/>
            <example type="ambiguous" inputform="ginge[gehen/VER:1:SIN:KJ2:NON,gehen/VER:3:SIN:KJ2:NON]" outputform="ginge[gehen/VER:3:SIN:KJ2:NON]">Sie sagte, er <marker>ginge</marker> jetzt.</example>
        </rule>
        <rule>
            <pattern>
                <token>ich</token>
                <marker>
                    <token postag="VER:.*1:SIN:.+" postag_regexp="yes" regexp="yes" case_sensitive="yes">[a-zäöü]+e</token>
                </marker>
            </pattern>
            <disambig action="remove" postag="VER.*:3:.+"/>
            <example type="ambiguous" inputform="ginge[gehen/VER:1:SIN:KJ2:NON,gehen/VER:3:SIN:KJ2:NON]" outputform="ginge[gehen/VER:1:SIN:KJ2:NON]">Sie sagte, ich <marker>ginge</marker> merkwürdig.</example>
        </rule>
        <rule>
            <pattern>
                <token skip="5">,<exception scope="next" regexp="yes">,|ich</exception><exception scope="next" postag="PA[12]:.+|VER:.*INF.*" postag_regexp="yes"></exception></token>
                <marker>
                    <token postag="VER:.*3:SIN:.+" postag_regexp="yes" regexp="yes" case_sensitive="yes">[a-zäöü]+e</token>
                </marker>
                <token><exception>ich</exception></token>
            </pattern>
            <disambig action="remove" postag="VER.*:1:.+"/>
            <example type="ambiguous" inputform="ginge[gehen/VER:1:SIN:KJ2:NON,gehen/VER:3:SIN:KJ2:NON]" outputform="ginge[gehen/VER:3:SIN:KJ2:NON]">Sie sagte, wenn der Mann <marker>ginge</marker>, könne man beginnen.</example>
            <example type="untouched">Seit er mich angelogen hat, spreche ich nicht mehr mit ihm.</example>
        </rule>
        <rule>
            <pattern>
                <token>,</token>
                <marker>
                    <token postag="VER:.*1:SIN:.+" postag_regexp="yes" regexp="yes" case_sensitive="yes">[a-zäöü]+e</token>
                </marker>
                <token>ich</token>
            </pattern>
            <disambig action="remove" postag="VER.*:(3|IMP):.+"/>
            <example type="ambiguous" inputform="sage[sagen/VER:1:SIN:KJ1:SFT,sagen/VER:1:SIN:PRÄ:SFT,sagen/VER:3:SIN:KJ1:SFT,sagen/VER:IMP:SIN:SFT]" outputform="sage[sagen/VER:1:SIN:KJ1:SFT,sagen/VER:1:SIN:PRÄ:SFT]">Weil sie es wollte, <marker>sage</marker> ich ihr diw Wahrheit.</example>
        </rule>
    </rulegroup>
    <rulegroup id="TASCHENMESSER" name="Taschenmesser">
        <rule>
            <pattern>
                <token inflected="yes">Taschenmesser</token>
            </pattern>
            <disambig action="remove" postag="SUB:.*:MAS"/>
        </rule>
    </rulegroup>
    <rulegroup id="ICH_LIEBE" name="ich liebe ... (liebe als Verb)">
        <rule>
            <pattern case_sensitive="yes">
                <token>Ich</token>
                <marker><token regexp="yes">liebe|vertraute</token></marker>
            </pattern>
            <disambig action="remove" postag="ADJ:.+|PA2:.+"/>
        </rule>
    </rulegroup>
    <rulegroup id="KEIN_IMPERATIV" name="Entferne Imperativ am Satzende langer Sätze">
        <rule>
            <pattern case_sensitive="yes">
                <token></token>
                <token></token>
                <token skip="-1"></token>
                <marker><token postag_regexp="yes" postag="VER:IMP.+"><exception scope="previous" postag="KON:NEB"/></token></marker>
                <token postag="SENT_END"/>
            </pattern>
            <disambig action="remove" postag="VER:IMP:.+"/>
        </rule>
    </rulegroup>
    <rulegroup id="RETTUNGSWAGEN" name="Rettungswagen keine Verbform">
        <rule>
            <pattern case_sensitive="yes">
                <token regexp="yes">(Rettungs|Kranken)wagen|[A-Z][a-zäöüß]{4,}(schmerzen|strecken)</token>
            </pattern>
            <disambig action="remove" postag="SUB:.+:SIN:NEU:INF"/>
        </rule>
    </rulegroup>
    <rulegroup id="PRP_NOM" name="kein Nominativ nach Präposition">
        <rule>
            <pattern case_sensitive="yes">
                <token postag_regexp="yes" postag="PRP:LOK(\+TMP)?:DAT"></token>
                <marker>
                    <and>
                        <token postag_regexp="yes" postag=".+(NOM|AKK):.+"></token>
                        <token postag_regexp="yes" postag=".+(DAT|GEN):.+"></token>
                    </and>
                </marker>
            </pattern>
            <disambig action="remove" postag=".+:(NOM|AKK):.+"/>
        </rule>
        <rule>
            <pattern case_sensitive="yes">
                <token postag_regexp="yes" postag="PRP.+"></token>
                <marker>
                    <and>
                        <token postag_regexp="yes" postag=".+NOM:.+"></token>
                        <token postag_regexp="yes" postag=".+(AKK|DAT|GEN):.+"></token>
                    </and>
                </marker>
            </pattern>
            <disambig action="remove" postag=".+:NOM:.+"/>
        </rule>
    </rulegroup>
    <rulegroup id="ZURATE" name="'zurate' keine Verbform in Verbindung mit 'ziehen'">
        <rule>
            <pattern case_sensitive="yes">
                <token inflected="yes" skip="5">ziehen<exception scope="next" postag="PKT"/></token>
                <marker><token>zurate</token></marker>
            </pattern>
            <disambig><wd lemma="zurate" pos="ADV">zurate</wd></disambig>
            <example type="ambiguous" inputform="zurate[zuraten/VER:1:SIN:KJ1:NON:NEB,zuraten/VER:1:SIN:PRÄ:NON:NEB,zuraten/VER:3:SIN:KJ1:NON:NEB]" outputform="zurate[zurate/ADV]">Bitte ziehe einen lokalen Experten <marker>zurate</marker>.</example>
        </rule>
        <rule>
            <pattern case_sensitive="yes">
                <marker><token>zurate</token></marker>
                <token inflected="yes">ziehen</token>
            </pattern>
            <disambig><wd lemma="zurate" pos="ADV">zurate</wd></disambig>
        </rule>
    </rulegroup>
    <rulegroup id="PRAEP_DAT" name="Präposition mit Dativ">
        <rule>
            <pattern>
                <token postag="PRP:TMP+MOD+CAU:DAT"></token>
                <marker>
                    <token postag="ADJ:.+" postag_regexp="yes" regexp="yes" case_sensitive="yes" min="0">[a-zäöüß]-+</token> 
                    <token postag="SUB:.+" postag_regexp="yes"></token>
                </marker>
            </pattern>
            <disambig action="remove" postag=".*:(NOM|AKK):.*"/>
        </rule>
    </rulegroup>
    <rulegroup id="DIREKTVERTRIEB" name="Kompositum mit 'Vertrieb' keine Verbform">
        <rule>
            <pattern case_sensitive="yes">
                <token regexp="yes">[A-Z].+vertrieb</token>
            </pattern>
            <disambig action="remove" postag="VER:.+"/>
        </rule>
    </rulegroup>
    <rulegroup id="SUB_PRT_VERB" name="Entferne Präteritum von Substantiv">
        <rule>
            <pattern case_sensitive="yes">
                <token><exception postag="SENT_START"/><exception regexp="yes">[:;]</exception></token>
                <marker>
                    <and>
                        <token postag="SUB:.+" postag_regexp="yes"/>
                        <token postag="VER:[1-3]:[A-Z]{3}:PRT:.+" postag_regexp="yes" regexp="yes">[A-ZÄÖÜ].+</token>
                    </and>
                </marker>
            </pattern>
            <disambig action="remove" postag="VER:.+"/>
            <example type="ambiguous" inputform="Abstand[Abstand/SUB:AKK:SIN:MAS,Abstand/SUB:DAT:SIN:MAS,Abstand/SUB:NOM:SIN:MAS,abstehen/VER:1:SIN:PRT:NON:NEB,abstehen/VER:3:SIN:PRT:NON:NEB]" outputform="Abstand[Abstand/SUB:AKK:SIN:MAS,Abstand/SUB:DAT:SIN:MAS,Abstand/SUB:NOM:SIN:MAS]">Ich habe Verständnis und halte <marker>Abstand</marker>.</example>
        </rule>
    </rulegroup>
    <rulegroup id="PA2_PRT_VERB" name="Entferne Präteritum von Partizip">
        <rule>
            <pattern case_sensitive="yes">
                <token inflected="yes" regexp="yes">ein|der</token>
                <marker>
                    <and>
                        <token postag="PA2:.+" postag_regexp="yes"/>
                        <token postag="VER:[1-3]:[A-Z]{3}:PRT:.+" postag_regexp="yes" regexp="yes">[a-zäöü].+</token>
                    </and>
                </marker>
                <token postag="SUB:.+" postag_regexp="yes" regexp="yes">[A-ZÄÖÜ].+</token>
            </pattern>
            <disambig action="remove" postag="VER:.+"/>
        </rule>
    </rulegroup>
    <rulegroup id="PA2_WERDEN" name="Entferne Adjektiv von Partizip">
        <rule>
            <pattern case_sensitive="yes">
                <marker>
                    <and>
                        <token postag="PA2:.+" postag_regexp="yes"/>
                        <token postag="ADJ:PRD:GRU"></token>
                    </and>
                </marker>
                <token regexp="yes">w[eo]rden</token>
            </pattern>
            <disambig action="remove" postag="ADJ:PRD:GRU"/>
        </rule>
        <rule>
            <pattern case_sensitive="yes">
                <token inflected="yes" skip="3">werden<exception scope="next" postag="PKT"/></token>
                <marker>
                    <and>
                        <token postag="PA2:.+" postag_regexp="yes"/>
                        <token postag="ADJ:PRD:GRU"></token>
                    </and>
                </marker>
                <token postag="PKT"></token>
            </pattern>
            <disambig action="remove" postag="ADJ:PRD:GRU"/>
        </rule>
    </rulegroup>
    <rulegroup id="RARE_PRT" name="Entferne Präteritum">
        <rule>
            <pattern case_sensitive="yes">
                <token><exception>ihr</exception></token>
                <marker>
                    <token>schlicht</token>
                </marker>
                <token><exception>ihr</exception></token>
            </pattern>
            <disambig action="remove" postag="VER:.+"/>
        </rule>
    </rulegroup>
    <!-- ============================================================================================================== -->
    <!-- IGNORE SPELLING -->
    <rule name="Ignore spelling of url protocols" id="URI_PROTOCOL">
        <pattern><!-- chrome://, ftp://, file:// -->
          <marker>
            <token regexp="yes">&browser_protocols;</token>
            <token spacebefore="no">:</token>
            <token spacebefore="no">/</token>
            <token spacebefore="no">/</token>
            <token spacebefore="no" min="0">/</token>
          </marker>
            <token spacebefore="no" regexp="yes">[a-z0-9\-]+</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="CO₂-Emission" id="CO2-EMISSION">
        <pattern>
            <token regexp="yes">CO₂-(Emission|Emissionen|Ausstoß|Ausstoßes|Steuern?|Rechnern?|Preis|Zylinder|Fußabdrucks?|Bepreisung)</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="en vogue" id="EN_VOGUE">
        <pattern>
            <token>en</token>
            <token regexp="yes">bloc|vogue|gros|masse|miniature|passant|détail|suite|fa(mill|c)e|garde|route|suite</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Ayers Rock" id="AYERS_ROCK">
        <pattern case_sensitive="yes">
            <token>Ayers</token>
            <token>Rock</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Alice Springs" id="ALICE_SPRINGS">
        <pattern case_sensitive="yes">
            <token>Alice</token>
            <token>Springs</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Mise en scène" id="MISE_EN_SCENE">
        <pattern>
            <token>Mise</token>
            <token>en</token>
            <token>scène</token>
        </pattern>
        <disambig action="immunize"/>
    </rule>

    <rule name="Crème de la Crème" id="CREME_DE_LA_CREME">
        <pattern case_sensitive="yes">
            <token>Crème</token>
            <token>de</token>
            <token>la</token>
            <token>Crème</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Crème fraîche/brûlée" id="CREME_FRAICHE">
        <pattern case_sensitive="yes">
            <token>Crème</token>
            <token regexp="yes">br[ûu]lée|Caramel|double|fraîche</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="d'accord" id="D_ACCORD">
        <pattern>
            <token>d</token>
            <token regexp="yes">['’]</token>
            <token>accord</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="laissez faire" id="LAISSEZ_FAIRE">
        <pattern>
            <token>laissez</token>
            <token>faire</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="corps diplomatique" id="CORPS_DIPLOMATIQUE">
        <pattern>
            <token>corps</token>
            <token>diplomatique</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="rien ne va plus" id="RIEN_NE_VA_PLUS">
        <pattern>
            <token>rien</token>
            <token>ne</token>
            <token>va</token>
            <token>plus</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="à la carte" id="A_LA_CARTE">
        <pattern>
            <token>à</token>
            <token>la</token>
            <token>carte</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="carte blanche" id="CARTE_BLANCHE">
        <pattern>
            <token>carte</token>
            <token>blanche</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="par excellence" id="PAR_EXCELLENCE">
        <pattern case_sensitive="yes">
            <token>par</token>
            <token>excellence</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Tour de Force/France" id="TOUR_DE_FORCE">
        <pattern case_sensitive="yes">
            <token>Tour</token>
            <token>de</token>
            <token regexp="yes">F(or|ran)ce|S(ki|uisse)</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Tour d'Horizon/Honneur" id="TOUR_D_HORIZON">
        <pattern case_sensitive="yes">
            <token regexp="yes">Tours?</token>
            <token>d</token>
            <token regexp="yes">['’]</token>
            <token regexp="yes">Ho(nneur|rizon)</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Pas de deux" id="PAS_DE_DEUX">
        <pattern case_sensitive="yes">
            <token>Pas</token>
            <token>de</token>
            <token>deux</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="pièce de résistance" id="RESISTANCE">
        <pattern>
            <token>pièce</token>
            <token>de</token>
            <token>résistance</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Arc de Triomphe" id="ARC_DE_TRIOMPHE">
        <pattern case_sensitive="yes">
            <token>Arc</token>
            <token>de</token>
            <token>Triomphe</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="nom de guerre" id="NOM_DE_GUERRE">
        <pattern>
            <token regexp="yes">noms?</token>
            <token>de</token>
            <token regexp="yes">guerre|plume</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Coq au Vin" id="COQ_AU_VIN">
        <pattern>
            <token>Coq</token>
            <token>au</token>
            <token>Vin</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Cordon bleu" id="CORDON_BLEU">
        <pattern case_sensitive="yes">
            <token>Cordon</token>
            <token regexp="yes">bleu|sanitaire</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Jour fixe" id="JOUR_FIXE">
        <pattern>
            <token regexp="yes">Blanc|Jour|Idée</token>
            <token>fixe</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Nouvelle Cuisine/Vague" id="NOUVELLE_VAGUE">
        <pattern>
            <token>Nouvelle</token>
            <token regexp="yes">Cuisine|Vague</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Saucen" id="SAUCEN">
        <pattern>
            <token>Sauce</token>
            <token regexp='yes'>hollandaise|béarnaise|bordelaise|Bolognese|Béchamel|tartare</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>
    <rule name="Casus" id="CASUS">
        <pattern>
            <token>Casus</token>
            <token regexp='yes'>Belli|Foederis|knacksus|obliquus|rectus</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Sambal Oelek" id="SAMBAL_OELEK">
        <pattern case_sensitive="yes">
            <token>Sambal</token>
            <token>Oelek</token>
        </pattern>
        <disambig action="immunize"/>
    </rule>

    <rule name="Pulled Pork" id="PULLED_PORK">
        <pattern case_sensitive="yes">
            <token>Pulled</token>
            <token>Pork</token>
        </pattern>
        <disambig action="immunize"/>
    </rule>

    <rule name="Earl Grey" id="EARL_GREY">
        <pattern case_sensitive="yes">
            <token>Earl</token>
            <token>Grey</token>
        </pattern>
        <disambig action="immunize"/>
    </rule>

    <rule name="Sierra Madre" id="SIERRA_MADRE">
        <pattern case_sensitive="yes">
            <token>Sierra</token>
            <token regexp="yes">Madre|Negra</token>
        </pattern>
        <disambig action="immunize"/>
    </rule>

    <rule name="Los Angeles" id="LOS_ANGELES">
        <pattern>
            <token>Los</token>
            <token regexp="yes">A(lamo|ngele)s</token>
        </pattern>
        <disambig action="immunize"/>
    </rule>

    <rule name="Las Vegas" id="LAS_VEGAS">
        <pattern case_sensitive="yes">
            <token>Las</token>
            <token regexp="yes">Ramblas|Vegas</token>
        </pattern>
        <disambig action="immunize"/>
    </rule>
    <rule name="ABBEY" id="ABBEY">
        <pattern case_sensitive="yes">
            <token>Westminster</token>
            <token>Abbey</token>
        </pattern>
        <disambig action="immunize"/>
    </rule>
    <rule name="Valleys" id="VALLEYS">
        <pattern case_sensitive="yes">
            <token regexp="yes">Death|Napa|Silicon</token>
            <token regexp="yes">Valleys?</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Oak Ridge" id="OAK_RIDGE">
        <pattern case_sensitive="yes">
            <token>Oak</token>
            <token>Ridge</token>
        </pattern>
        <disambig action="immunize"/>
    </rule>

    <rule name="Rhythm and Blues" id="RHYTHM_AND_BLUES">
        <pattern>
            <token>Rhythm</token>
            <token>and</token>
            <token>Blues</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="World of Warcraft" id="WOW">
        <pattern case_sensitive="yes">
            <token>World</token>
            <token>of</token>
            <token>Warcraft</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="World Trade Center" id="WTC">
        <pattern case_sensitive="yes">
            <token>World</token>
            <token>Trade</token>
            <token regexp="yes">Centers?</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Christopher Street Day" id="CSD">
        <pattern case_sensitive="yes">
            <token>Christopher</token>
            <token>Street</token>
            <token>Day</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Rock and Roll" id="ROCK_AND_ROLL">
        <pattern>
            <token>Rock</token>
            <token>and</token>
            <token>Roll</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Alexius Meinong" id="ALEXIUS_MEINONG">
        <pattern>
            <token>Alexius</token>
            <token regexp="yes">Meinongs?</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="starker Tobak" id="STARKER_TOBAK">
        <pattern>
            <token regexp="yes">alter|starker|anno</token>
            <token>Tobak</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Alfred Nobel" id="ALFRED_NOBEL">
        <pattern>
            <token>Alfred</token>
            <token>Nobel</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="São Paulo" id="SAO_PAULO">
        <pattern>
            <token>São</token>
            <token regexp="yes">(Paulo|Vicente|Miguel|José)s?</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Addis Abeba" id="ADDIS_ABEBA">
        <pattern>
            <token>Addis</token>
            <token>Abeba</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="La Paz" id="LA_PAZ">
        <pattern case_sensitive="yes">
            <token>La</token>
            <token regexp="yes">Paz|[Tt]raviata|Rambla</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Santo Domingo" id="SANTO_DOMINGO">
        <pattern>
            <token>Santo</token>
            <token>Domingo</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="San Bernardino" id="SAN_BERNARDINO">
        <pattern case_sensitive="yes">
            <token>San</token>
            <token regexp="yes">Bernardino|Gottardo|Remo</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Le Havre/Le Mans" id="LE_HAVRE">
        <pattern>
            <token>Le</token>
            <token regexp='yes'>Havre|Mans|Monde|Pens?|Corbusiers?|Figaros?</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Phnom Penh" id="PHNOM_PENH">
        <pattern>
            <token>Phnom</token>
            <token>Penh</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Mozilla/Wikimedia Foundation" id="FOUNDATIONS">
        <pattern>
            <token regexp="yes">Wikimedia|Mozilla</token>
            <token>Foundation</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Open Source" id="OPEN_SOURCE">
        <pattern>
            <token>Open</token>
            <token>Source</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Visual Studio/Basic" id="VISUAL_STUDIO">
        <pattern case_sensitive="yes">
            <token>Visual</token>
            <token regexp="yes">Studio|Basic</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="European Standardisation" id="EUROPEAN_STANDARDISATION">
        <pattern case_sensitive="yes">
            <token>European</token>
            <token>Standardisation</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Jungle World" id="JUNGLE_WORLD">
        <pattern>
            <token>Jungle</token>
            <token>World</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Rolling Stones" id="STONES">
        <pattern>
            <token>Rolling</token>
            <token regexp='yes'>Stones?</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Ein und Alles" id="EIN_UND_ALLES">
        <pattern>
            <!-- http://canoonet.eu/blog/2008/11/14/zum-einen-zum-anderen/ -->
            <token>Ein</token>
            <token>und</token>
            <token>Alles</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Big Ben" id="BIG_BEN">
        <pattern>
            <token>Big</token>
            <token regexp="yes">Apple|B(en|an[dg]|uisnes|rother)s?|Datas?|Macs?|Points?|Pushs?</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Chief" id="CHIEF"><!-- common job titles -->
      <pattern case_sensitive="yes">
        <token>Chief</token>
        <token regexp="yes">Executive|Growth|Product|Technology|Sales|Business|Information|People|Procurement|Customer|Support|Commercial</token>
        <token regexp="yes">Officers?</token>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>

    <rule name="sapere aude" id="SAPERE_AUDE">
        <pattern>
            <token>sapere</token>
            <token>aude</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="coram publico" id="CORAM_PUBLICO">
        <pattern>
            <token>coram</token>
            <token>publico</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="nomen est omen" id="NOMEN_EST">
        <pattern>
            <token>nomen</token>
            <token case_sensitive="yes">est</token>
            <token case_sensitive="yes">omen</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>
    <rule name="habeas corpus" id="HABEAS_CORPUS">
        <pattern>
            <token>habeas</token>
            <token>corpus</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>
        <rule name="habemus Papam" id="HABEMUS_PAPAM">
        <pattern>
            <token>habemus</token>
            <token>Papam</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>
    <rule name="et al." id="ET_AL">
        <pattern>
            <token>et</token>
            <token>al</token>
            <token>.</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="rigor mortis" id="RIGOR_MORTIS">
        <pattern>
            <token>rigor</token>
            <token>mortis</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="carpe diem" id="CARPE_DIEM">
        <pattern>
            <token>carpe</token>
            <token>diem</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="tabula rasa" id="TABULA_RASA">
        <pattern>
            <token>tabula</token>
            <token>rasa</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="vox populi" id="VOX_POPULI">
        <pattern>
            <token>vox</token>
            <token>populi</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="coitus interruptus" id="COITUS_INTERRUPTUS">
        <pattern>
            <token>coitus</token>
            <token>interruptus</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Delirium tremens" id="DELIRIUM_TREMENS">
        <pattern case_sensitive="yes">
            <token>Delirium</token>
            <token>tremens</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="ius primae noctis" id="IUS_PRIMAE_NOCTIS">
        <pattern>
            <token>ius</token>
            <token>primae</token>
            <token>noctis</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="argumentum ad ..." id="ARGUMENTUM_AD">
        <pattern>
            <token>argumentum</token>
            <token>ad</token>
            <token regexp="yes">antiquitatem|misericordiam|passiones|hominem|veritatem|personam|populum</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="similia similibus curantur" id="SIMILIA_SIMILIBUS">
        <pattern>
            <token>similia</token>
            <token>similibus</token>
            <token>curantur</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="tu quoque" id="TU_QUOQUE">
        <pattern>
            <token>tu</token>
            <token>quoque</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="homo homini lupus" id="HOMO_HOMINI_LUPUS">
        <pattern>
            <token>homo</token>
            <token>homini</token>
            <token>lupus</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="ultra posse nemo obligatur" id="ULTRA_POSSE">
        <pattern>
            <token>ultra</token>
            <token>posse</token>
            <token>nemo</token>
            <token>obligatur</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="corpus delicti" id="CORPUS_DELICTI">
        <pattern>
            <token>corpus</token>
            <token>delicti</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Opus Dei" id="OPUS_DEI">
        <pattern case_sensitive="yes">
            <token>Opus</token>
            <token>Dei</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Alma Mater" id="ALMA_MATER">
        <pattern case_sensitive="yes">
            <token>Alma</token>
            <token>Mater</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="homo faber" id="HOMO_FABER">
        <pattern case_sensitive="yes">
            <token>Homo</token>
            <token regexp="yes">erectus|faber|habilis|ludens|neanderthalensis|novus|oeconomicus|oecologicus</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="lege artis" id="LEGE_ARTIS">
        <pattern>
            <token>lege</token>
            <token>artis</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="summa summarum" id="SUMMARUM">
        <pattern>
            <token>summa</token>
            <token>summarum</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="modus operandi" id="MODUS_OPERANDI">
        <pattern>
            <token>modus</token>
            <token>operandi</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Ars vivendi" id="ARS_VIVENDI">
        <pattern>
            <token>ars</token>
            <token>vivendi</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Pars pro toto" id="PRO_TOTO">
        <pattern>
            <token>pars</token>
            <token>pro</token>
            <token>toto</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="da capo" id="DA_CAPO">
        <pattern>
            <token>da</token>
            <token>capo</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="ex oriente lux" id="EX_ORIENTE_LUX">
        <pattern>
            <token>ex</token>
            <token>oriente</token>
            <token>lux</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="sit venia verbo" id="VENIA_VERBO">
        <pattern>
            <token>sit</token>
            <token>venia</token>
            <token>verbo</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>
    <rule name="mutatis mutandis" id="MUTATIS_MUTANDIS">
        <pattern>
            <token>mutatis</token>
            <token>mutandis</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>
    <rule name="in dubio pro reo" id="IN_DUBIO">
        <pattern>
            <token>in</token>
            <token>dubio</token>
            <token>pro</token>
            <token>reo</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="cum/sine/ex tempore" id="CUM_TEMPORE">
        <pattern>
            <token regexp="yes">cum|sine|ex</token>
            <token>tempore</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="pax/dominus vobiscum" id="VOBISCUM">
        <pattern>
            <token regexp="yes">pax|dominus</token>
            <token>vobiscum</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="sensu stricto/lato" id="SENSU_LATO">
        <pattern>
            <token>sensu</token>
            <token regexp="yes">lato|stricto</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="in praesentia" id="IN_PRAESENTIA">
        <pattern>
            <token>in</token>
            <token regexp="yes" case_sensitive="yes">(ab|prae)sentia|memoriam|effectu</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="nolens volens" id="NOLENS_VOLENS">
        <pattern>
            <token>nolens</token>
            <token>volens</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="principiis obsta" id="PRINCIPIIS_OBSTA">
        <pattern>
            <token>principiis</token>
            <token>obsta</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="pro domo" id="PRODOMO">
        <pattern>
            <token>pro</token>
            <token>domo</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="opus magnum" id="OPUS_MAGNUM">
        <pattern>
            <token>opus</token>
            <token>magnum</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="in vino veritas" id="VINO_VERITAS">
        <pattern>
            <token>in</token>
            <token>vino</token>
            <token>veritas</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="bona fide" id="BONA_FIDE">
        <pattern>
            <token>bona</token>
            <token>fide</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="ex nihilo" id="EX_NIHILO">
        <pattern>
            <token>ex</token>
            <token regexp="yes">aequo|nihilo|nunc|tunc</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="suum cuique" id="SUUM_CUIQUE">
        <pattern>
            <token>suum</token>
            <token>cuique</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Urbi et orbi" id="URBI_ORBI">
        <pattern>
            <token>Urbi</token>
            <token>et</token>
            <token>orbi</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Spiritus Rector" id="SPIRITUS_RECTOR">
        <pattern>
            <token>Spiritus</token>
            <token>Rector</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Terra incognita" id="TERRA_INCOGNITA">
        <pattern>
            <token>terra</token>
            <token regexp="yes">incognita|nova|preta</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="sine ira et studio" id="SINE_IRA">
        <pattern>
            <token>sine</token>
            <token>ira</token>
            <token>et</token>
            <token>studio</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="non sequitur" id="NON_SEQUITUR">
        <pattern>
            <token>non</token>
            <token>sequitur</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="reductio ad absurdum" id="REDUCTIO_AD_ABSURDUM">
        <pattern>
            <token>reductio</token>
            <token>ad</token>
            <token>absurdum</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="conditio sine qua non" id="CONDITIO_SINE_QUA_NON">
        <pattern>
            <token>conditio</token>
            <token>sine</token>
            <token>qua</token>
            <token>non</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="contradictio in adiecto" id="CONTRADICTIO_IN_ADIECTO">
        <pattern>
            <token>contradictio</token>
            <token>in</token>
            <token>adiecto</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="tertium non datur" id="TERTIUM_NON_DATUR">
        <pattern>
            <token>tertium</token>
            <token>non</token>
            <token>datur</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="requiescat in pace" id="RIP">
        <pattern>
            <token>requiescat</token>
            <token>in</token>
            <token>pace</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="in statu nascendi" id="IN_STATU_NASCENDI">
        <pattern>
            <token>in</token>
            <token>statu</token>
            <token>nascendi</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="stante pede" id="STANTE_PEDE">
        <pattern>
            <token>stante</token>
            <token>pede</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="honoris causa" id="HC">
        <pattern>
            <token>honoris</token>
            <token>causa</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="in situ" id="IN_SITU">
        <pattern>
            <token regexp="yes">in|ex</token>
            <token>situ</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="peu à peu" id="PEU_A_PEU">
        <pattern>
            <token>peu</token>
            <token>à</token>
            <token>peu</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="avant la lettre" id="AVANT_LA_LETTRE">
        <pattern>
            <token regexp="yes">avant|avec|après</token>
            <token>la</token>
            <token>lettre</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Île de Ré" id="ILE_DE_FRANCE">
        <pattern>
            <token>Île</token>
            <token>de</token>
            <token regexp="yes">Ré|France|Porquerolles</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="noch und nöcher" id="NOCH_UND_NOECHER">
        <pattern>
            <token>noch</token>
            <token>und</token>
            <token>nöcher</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Air Force" id="AIR_FORCE">
        <pattern>
            <token>Air</token>
            <token regexp="yes">F(or|ran)ce|Berlin</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>
    <rule name="Air Force One" id="AIR_FORCE_ONE">
        <pattern case_sensitive="yes">
            <token>Air</token>
            <token>Force</token>
            <token>One</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>
    <rule name="cui bono" id="CUI_BONO">
        <pattern>
            <token>cui</token>
            <token>bono</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="In- und Ausland" id="IN_UND_AUSLAND">
        <pattern>
            <token>In-</token>
            <token regexp='yes' case_sensitive="yes">und|oder|beziehungsweise</token>
            <token regexp="yes" case_sensitive="yes">Ausland|außerhalb</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="in- und ausländisch" id="IN_UND_AUSLAENDISCH">
        <pattern>
            <token>in-</token>
            <token regexp='yes'>und|oder|beziehungsweise</token>
            <token regexp='yes'>ausländisch(e[mnrs]?)?</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Memento mori" id="MEMENTO_MORI">
        <pattern>
            <token>Memento</token>
            <token>mori</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="ad hoc" id="AD_HOC">
        <pattern>
            <token>ad</token>
            <token regexp='yes'>ho(c|minem)|infinitum|libitum|nauseam</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="salva veritate" id="SALVA_VERITATE">
        <pattern>
            <token>salva</token>
            <token>veritate</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="ab ovo" id="AB_OVO">
        <pattern>
            <token>ab</token>
            <token>ovo</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Persona non grata" id="PERSONA_NON_GRATA">
        <pattern>
            <token>Persona</token>
            <token min="0">non</token>
            <token regexp="yes">(in)?grata</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Enfant terrible" id="ENFANT_TERRIBLE">
        <pattern>
            <token>Enfant</token>
            <token>terrible</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Fair Play" id="FAIR_PLAY">
        <!-- http://www.korrekturen.de/wortliste/fair_play.shtml -->
        <pattern case_sensitive="yes">
            <token>Fair</token>
            <token regexp="yes">Play|Trade</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="University of" id="UNIVERSITY_OF">
        <pattern case_sensitive="yes">
            <token>University</token>
            <token>of</token>
            <token regexp="yes">[A-Z][a-z]+</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>
    <rule name="Yad Vashem" id="YAD_VASHEM">
        <pattern>
            <token>Yad</token>
            <token>Vashem</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="El Niño" id="EL_NINO">
        <pattern>
            <token>El</token>
            <token regexp="yes">Niño|Salvador|Paso</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Reih und Glied" id="REIH_UND_GLIED">
        <pattern>
            <token>Reih</token>
            <token>und</token>
            <token>Glied</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Magna cum laude" id="MAGNA_CUM_LAUDE">
        <pattern>
            <token regexp="yes" min="0">magna|summa</token>
            <token>cum</token>
            <token>laude</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="in medias res" id="IN_MEDIAS_RES">
        <pattern>
            <token>in</token>
            <token>medias</token>
            <token>res</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="conditio humana" id="CONDITIO_HUMANA">
        <pattern>
            <token>conditio</token>
            <token>humana</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Facultas Docendi" id="FACULTAS_DOCENDI">
        <pattern>
            <token>Facultas</token>
            <token>Docendi</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Venia Legendi" id="VENIA_LEGENDI">
        <pattern>
            <token>Venia</token>
            <token>Legendi</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="sui generis" id="SUI_GENERIS">
        <pattern>
            <token>sui</token>
            <token>generis</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="ceteris paribus" id="CETERIS_PARIBUS">
        <pattern>
            <token>ceteris</token>
            <token>paribus</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="pacta" id="PACTA_SUNT_SERVANDA">
        <pattern>
            <token>pacta</token>
            <token>sunt</token>
            <token>servanda</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="pater familias" id="PATER_FAMILIAS">
        <pattern>
            <token>pater</token>
            <token>familias</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>
    <rule name="High" id="HIGH">
        <pattern case_sensitive="yes">
            <token>High</token>
            <token regexp='yes'>Noon|Potential|Society</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>
    <rule name="Grand Canyon" id="GRAND_CANYON">
        <pattern case_sensitive="yes">
            <token>Grand</token>
            <token regexp='yes'>Canyons?|Jury|Slams?|Hyatt|Prix|Cru|Marnier|Fleet|Lit</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>
    <rule name="die Grand Jury" id="GRAND_JURY">
        <pattern case_sensitive="yes">
            <token regexp="yes">[dD]ie</token>
            <token>Grand</token>
            <token>Jury</token>
        </pattern>
        <disambig action="immunize"/>
    </rule>

    <rule name="horribile dictu" id="HORRIBILE_DICTU">
        <pattern>
            <token>horribile</token>
            <token>dictu</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Diabetes mellitus" id="DIABETES_MELLITUS">
        <pattern>
            <token>Diabetes</token>
            <token regexp="yes">mellitus|renalis|insipidus</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Javaanse Jongens" id="JAVAANSE_JONGENS">
        <pattern case_sensitive="yes">
            <token>Javaanse</token>
            <token>Jongens</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Böhse Onkelz" id="BOEHSE_ONKELZ">
        <pattern case_sensitive="yes">
            <token regexp="yes">Böhsen?</token>
            <token>Onkelz</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Potz Blitz" id="POTZ_BLITZ">
        <pattern>
            <token>potz</token>
            <token regexp="yes">Blitz|Blut|Donner(wetter)?|Marter|Teufel</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="dolce vita" id="DOLCE_VITA">
        <pattern>
            <token>dolce</token>
            <token>vita</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Grana Padano" id="GRANA_PADANO">
        <pattern case_sensitive="yes">
            <token>Grana</token>
            <token>Padano</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="dolce far niente" id="DOLCE_FAR_NIENTE">
        <pattern>
            <token>dolce</token>
            <token>far</token>
            <token>niente</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Wall Street" id="WALL_STREET">
        <pattern>
            <token regexp="yes">Wall|Downing|Baker</token>
            <token>Street</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Trafalgar Square" id="TRAFALGAR_SQUARE">
        <pattern case_sensitive="yes">
            <token regexp="yes">Madison|Trafalgar</token>
            <token>Square</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Fifth Avenue" id="FIFTH_AVENUE">
        <pattern case_sensitive="yes">
            <token regexp="yes">Fifth|[4-9]th</token>
            <token>Avenue</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="on the rocks" id="ON_THE_ROCKS">
        <pattern>
            <token>on</token>
            <token>the</token>
            <token>rocks</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Cuba Libre" id="CUBA_LIBRE">
        <pattern case_sensitive="yes">
            <token>Cuba</token>
            <token>Libre</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Tequila Sunrise" id="TEQUILA_SUNRISE">
        <pattern case_sensitive="yes">
            <token>Tequila</token>
            <token>Sunrise</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Gin Tonic" id="GIN_TONIC">
        <pattern case_sensitive="yes">
            <token>Gin</token>
            <token regexp="yes" min="0">and|&amp;</token>
            <token>Tonic</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Bloody Mary" id="BLOODY_MARY">
        <pattern case_sensitive="yes">
            <token>Bloody</token>
            <token>Mary</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="American Ginger Ale" id="AMERICAN_GINGER_ALE">
    <!-- Produktname von Schweppes, sonst ist lt. Duden Ginger-Ale richtig -->
        <pattern case_sensitive="yes">
            <token>American</token>
            <token>Ginger</token>
            <token>Ale</token>
        </pattern>
        <disambig action="immunize"/>
    </rule>
    <rule name="American Dream" id="AMERICAN_DREAM">
        <pattern case_sensitive="yes">
            <token>American</token>
            <token regexp="yes">Airlines|Dream|Express|Football|Horror|Dad</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>
    <rule name="Financial Times" id="FINANCIAL_TIMES">
        <pattern case_sensitive="yes">
            <token>Financial</token>
            <token regexp="yes">Times|Services?|Engineerings?</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Daily" id="DAILY">
        <pattern case_sensitive="yes">
            <token>Daily</token>
            <token regexp="yes">Mail|Telegraphs?|Express|Mirrors?|Talks?|Soaps?|Work</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="National Geographic" id="NATIONAL_GEOGRAPHIC">
        <pattern case_sensitive="yes">
            <token>National</token>
            <token>Geographic</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="per se" id="PER_SE">
        <pattern>
            <token>per</token>
            <token regexp="yes">procura|rectum|saldo|se|pedes</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Pour le Mérite" id="POUR_LE_MERITE">
        <pattern>
            <token>Pour</token>
            <token>le</token>
            <token>Mérite</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="virtual" id="VPN">
        <pattern case_sensitive="yes">
            <token>Virtual</token>
            <token>Private</token>
            <token>Network</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <!-- Eigennamen -->
    <rule name="Umberto Eco" id="UMBERTO_ECO">
        <pattern>
            <token>Umberto</token>
            <token regexp="yes">Ecos?</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="François Hollande" id="FRANCOIS_HOLLANDE">
        <pattern>
            <token>François</token>
            <token regexp="yes">Hollandes?</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Liza Minnelli" id="LIZA_MINNELLI">
        <pattern>
            <token>Liza</token>
            <token regexp="yes">Minnellis?</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Ho Chi Minh" id="HO_CHI_MINH">
        <pattern case_sensitive="yes">
            <token>Ho</token>
            <token>Chi</token>
            <token>Minh</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Hồ Chí Minh" id="HO_CHI_MINH_SPECIAL">
        <pattern case_sensitive="yes">
            <token>Hồ</token>
            <token>Chí</token>
            <token>Minh</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Fra Angelico" id="FRA_ANGELICO">
        <pattern case_sensitive="yes">
            <token>Fra</token>
            <token regexp="yes">Angelicos?</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Geert Wilders" id="GEERT_WILDERS">
        <pattern case_sensitive="yes">
            <token>Geert</token>
            <token>Wilders</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Cem Özdemir" id="CEM_OEZDEMIR">
        <pattern case_sensitive="yes">
            <token>Cem</token>
            <token regexp='yes'>Özdemirs?</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Kellyanne Elizabeth Conway" id="KELLYANNE_CONWAY">
        <pattern case_sensitive="yes">
            <token>Kellyanne</token>
            <token min="0">Elizabeth</token>
            <token regexp='yes'>Conways?</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Fethullah Gülen" id="GUELEN">
        <pattern case_sensitive="yes">
            <token>Fethullah</token>
            <token regexp='yes'>Gülens?</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Bjarne Stroustrup" id="BJARNE_STROUSTRUP">
        <pattern case_sensitive="yes">
            <token>Bjarne</token>
            <token regexp='yes'>Stroustrups?</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Ringo Starr" id="RINGO_STARR">
        <pattern case_sensitive="yes">
            <token>Ringo</token>
            <token regexp='yes'>Starrs?</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Justin Bieber" id="JUSTIN_BIEBER">
        <pattern case_sensitive="yes">
            <token>Justin</token>
            <token regexp='yes'>Biebers?</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Recep Tayyip Erdoğan" id="ERDOGAN">
        <pattern case_sensitive="yes">
            <token>Recep</token>
            <token>Tayyip</token>
            <token regexp='yes'>Erdoğans?</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Hillary Clinton" id="HILLARY_CLINTON">
        <pattern case_sensitive="yes">
            <token regexp='yes'>Hillary|Bill</token>
            <token regexp='yes'>Clintons?</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Abu" id="ABU_DHABI">
        <pattern case_sensitive="yes">
            <token>Abu</token>
            <token>Dhabi</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Great Barrier Reef" id="GREAT_BARRIER_REEF">
        <pattern case_sensitive="yes">
            <token>Great</token>
            <token>Barrier</token>
            <token>Reef</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Rocky Mountains" id="ROCKY_MOUNTAINS">
        <pattern case_sensitive="yes">
            <token>Rocky</token>
            <token>Mountains</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Energie-, Zeit- und Längeneinheiten" id="EINHEITEN">
        <pattern case_sensitive="yes">
            <token regexp="yes">\d+</token>
            <token regexp="yes">[hμnpf][ms]|[MG]?eV<exception>hs</exception></token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="de Beauvoir" id="BEAUVOIR">
        <pattern case_sensitive="yes">
            <token>de</token>
            <token regexp="yes">Beauvoirs?</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Côte d'Azur" id="COTE_DAZUR">
        <pattern case_sensitive="yes">
            <token>Côte</token>
            <token>d</token>
            <token regexp="yes">['’]</token>
            <token>Azur</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Alpha Centauri" id="ALPHA_PROXIMA_CENTAURI">
        <pattern case_sensitive="yes">
            <token regexp="yes">Alpha|Proxima</token>
            <token>Centauri</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Pearl Harbor" id="PEARL_HARBOR">
        <pattern case_sensitive="yes">
            <token>Pearl</token>
            <token>Harbor</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Mark Twain" id="MARK_TWAIN">
        <pattern>
            <token>Mark</token>
            <token regexp="yes">Twains?</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Isle of Man" id="ISLE_OF_MAN">
        <pattern case_sensitive="yes">
            <token>Isle</token>
            <token>of</token>
            <token regexp="yes">Man|Wight|Arran|Mull</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Sex and the City" id="SEX_CITY">
        <pattern case_sensitive="yes">
            <token>Sex</token>
            <token>and</token>
            <token>the</token>
            <token>City</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Addams Family" id="ADDAMS_FAMILY">
        <pattern case_sensitive="yes">
            <token>Addams</token>
            <token>Family</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Breaking Bad" id="BREAKING_BAD">
        <pattern case_sensitive="yes">
            <token>Breaking</token>
            <token>Bad</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Star Wars" id="STARWARS">
        <pattern case_sensitive="yes">
            <token>Star</token>
            <token regexp="yes">Wars|Trek</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Google Maps" id="GOOGLE_MAPS">
        <pattern case_sensitive="yes">
            <token>Google</token>
            <token regexp="yes">Ads|Assistant|Docs|Drive|Earth|Groups|Hangouts|Maps|Wallet</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Vienna Capitals" id="VIENNA_CAPITALS">
        <pattern case_sensitive="yes">
            <token>Vienna</token>
            <token>Capitals</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Human Rights Watch" id="HUMAN_RIGHTS_WATCH">
        <pattern case_sensitive="yes">
            <token>Human</token>
            <token>Rights</token>
            <token>Watch</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Ruby on Rails" id="RUBY_ON_RAILS">
        <pattern case_sensitive="yes">
            <token>Ruby</token>
            <token>on</token>
            <token>Rails</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="con Carne" id="CON_CARNE">
        <pattern case_sensitive="yes">
            <token>con</token>
            <token>Carne</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Special Olympics" id="SPECIAL_OLYMPICS">
        <pattern case_sensitive="yes">
            <token>Special</token>
            <token>Olympics</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Scotland Yard" id="SCOTLAND_YARD">
        <pattern case_sensitive="yes">
            <token>Scotland</token>
            <token>Yard</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Buckingham Palace" id="BUCKINGHAM_PALACE">
        <pattern case_sensitive="yes">
            <token>Buckingham</token>
            <token>Palace</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Parks" id="PARKS">
        <pattern case_sensitive="yes">
            <token regexp="yes">Bletchley|Central|Hyde</token>
            <token>Park</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Transparency International" id="TRANSPARENCY">
        <pattern case_sensitive="yes">
            <token>Transparency</token>
            <token>International</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Aurora" id="AURORA">
        <pattern case_sensitive="yes">
            <token>Aurora</token>
            <token regexp="yes">(bore|austr)alis</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Top Ten" id="TOP_TEN">
        <pattern case_sensitive="yes">
            <token>Top</token>
            <token>Ten</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Secret" id="SECRET">
        <pattern case_sensitive="yes">
            <token>Secret</token>
            <token>Service</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Mexico" id="MEXICO">
        <pattern case_sensitive="yes">
            <token>New</token>
            <token regexp="yes">Haven|Mexico|Age|Economy</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="LHC" id="LHC">
        <pattern>
            <token>Large</token>
            <token>Hadron</token>
            <token>Collider</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Enola Gay" id="ENOLA_GAY">
        <pattern case_sensitive="yes">
            <token>Enola</token>
            <token>Gay</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Little Boy" id="LITTLE_BOY">
        <pattern case_sensitive="yes">
            <token>Little</token>
            <token regexp="yes">Bighorn|Boy|Italy|John|Rock</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Fat Man" id="FAT_MAN">
        <pattern>
            <token>Fat</token>
            <token regexp="yes">Client|Man</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Moulin Rouge" id="MOULIN_ROUGE">
      <pattern case_sensitive="yes">
        <token regexp="yes">Baton|Moulin</token>
        <token>Rouge</token>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Corned Beef" id="CORNED_BEEF">
      <pattern case_sensitive="yes">
        <token>Corned</token>
        <token>Beef</token>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Belle Epoque" id="BELLE_EPOQUE">
      <pattern case_sensitive="yes">
        <token>Belle</token>
        <token regexp="yes">[EÉ]poque</token>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Happy End" id="HAPPY_END">
      <pattern case_sensitive="yes">
        <token>Happy</token>
        <token regexp="yes">Ends?|Hours?|Fews?</token>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
    <rule name="Pietra dura" id="PIETRA_DURA">
      <pattern case_sensitive="yes">
        <token>Pietra</token>
        <token>dura</token>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
    <rule name="Tadsch Mahal" id="TADSCH_MAHAL">
      <pattern case_sensitive="yes">
        <token regexp="yes">Ta(dsch|j)</token>
        <token regexp="yes">Mahals?</token>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
    <rule name="Royal Society" id="ROYAL_SOCIETY">
      <pattern case_sensitive="yes">
        <token>Royal</token>
        <token regexp="yes">Academy|British|Navy|Society</token>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
    <rule name="Institute of Technology" id="MIT">
      <pattern case_sensitive="yes">
        <token>Institute</token>
        <token>of</token>
        <token>Technology</token>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
    <rule name="68ern" id="ZAHL_ERN">
      <pattern case_sensitive="yes">
        <token regexp="yes">\d{2,4}ern?</token>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
    <rule name="Mont" id="MONT">
      <pattern case_sensitive="yes">
        <token>Mont</token>
        <token regexp="yes">Blanc|Ventoux|Vully</token>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
    <rule name="Primus" id="PIP">
      <pattern>
        <token>Primus</token>
        <token>inter</token>
        <token>Pares</token>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
    <rule name="Prince" id="PRINCE">
      <pattern case_sensitive="yes">
        <token regexp="yes">Prince(ss)?</token>
        <token>of</token>
        <token>Wales</token>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
    <rule name="Press" id="PRESS">
      <pattern case_sensitive="yes">
        <token>University</token>
        <token>Press</token>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
    <rule name="Hotdog" id="HOTDOG">
      <pattern case_sensitive="yes">
        <token>Hot</token>
        <token>Dog</token>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
    <rule name="ich stehe kopf" id="KOPFSTEHEN">
      <pattern>
        <token inflected="yes">stehen</token>
        <token case_sensitive="yes">kopf</token>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
    <rule name="Machu Picchu" id="MACHU_PICCHU">
      <pattern case_sensitive="yes">
        <token>Machu</token>
        <token>Picchu</token>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
    <rule name="-köpfig" id="KOEPFIG">
      <pattern case_sensitive="yes">
        <token regexp="yes">\d+-(köpf|mal|zeil|lag|stünd|minüt|geschoss|stöck|wöch|teil|räum)ig(e[mnsr]?)?</token>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
    <rule name="Bachelor/Master of Arts" id="OF_ARTS">
      <pattern case_sensitive="yes">
        <token>of</token>
        <token regexp="yes">Arts|Business|Engineering|Laws|Science</token>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
    <rule name="Low Carb" id="LOW_CARB">
      <pattern case_sensitive="yes">
        <token>Low</token>
        <token>Carb</token>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
    <rule name="Corporate" id="CORPORATE">
      <pattern case_sensitive="yes">
        <token>Corporate</token>
        <token regexp="yes">Designs?|Identit(ies|y)</token>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
    <rule name="Cosa Nostra" id="COSA">
      <pattern case_sensitive="yes">
        <token>Cosa</token>
        <token>Nostra</token>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
    <rule name="Fleur" id="FLEUR">
      <pattern case_sensitive="yes">
        <token>Fleur</token>
        <token>de</token>
        <token>Sel</token>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
    <rule name="Abkürzungen" id="UPPERCASE_ABBREVIATIONS">
      <pattern case_sensitive="yes">
        <token>(</token>
        <token spacebefore="no" regexp="yes">[A-Z]{2,3}</token>
        <token spacebefore="no">)</token>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
    <rule name="sch (Ohm'sches Gesetz)" id="SCH">
      <pattern case_sensitive="yes">
        <token spacebefore="no" regexp="yes">['´’]</token>
        <token spacebefore="no" regexp="yes">sche[rmns]?</token>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
    <rule name="Reit im Winkl" id="REIT_IM_WINKL">
      <pattern case_sensitive="yes">
        <token>Reit</token>
        <token>im</token>
        <token>Winkl</token>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
    <rule name="à la" id="A_LA">
      <pattern case_sensitive="yes">
        <token>à</token>
        <token>la</token>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
    <rule name="Long Island" id="LONG_ISLAND">
      <pattern case_sensitive="yes">
        <token>Long</token>
        <token regexp="yes">Beach|Island</token>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
    <rule name="Cape Cod" id="CAPE_COD">
      <pattern case_sensitive="yes">
        <token>Cape</token>
        <token regexp="yes">C(anaveral|od|oral)</token>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
    <rule name="Kottbusser" id="KOTTBUSSER">
      <pattern case_sensitive="yes">
        <token>Kottbusser</token>
        <token regexp="yes">Brücke|Damms?|Tors?</token>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
    <rule name="Al Kaida" id="AL">
      <pattern case_sensitive="yes">
        <token>Al</token>
        <token regexp="yes">Capones?|Gores?|Jazeeras?|Kaidas?</token>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
    <rule name="hin- und hergerissen" id="HIN_HER">
      <pattern case_sensitive="yes">
        <marker><token regexp="yes">(a[bn]|aus|um|über|unter|auf|hin|nach|vor|zurück)-</token></marker>
        <token postag="KON:.+" postag_regexp="yes"></token>
        <token regexp="yes">(a[bn]|aus|um|über|unter|auf|her|hin|nach|vor|weg|zurück)\w+</token>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
    <rule name="hin- und hergerissen" id="HIN_HER_KOMMA">
      <pattern case_sensitive="yes">
        <marker><token regexp="yes">(a[bn]|aus|um|über|unter|auf|hin|nach|vor|zurück)-</token></marker>
        <token>,</token>
        <token regexp="yes">(a[bn]|aus|um|über|unter|auf|her|hin|nach|vor|weg|zurück)[\w-]+</token>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
    <rule name="Auf- oder Abwertung" id="HIN_HER_GROSS">
      <pattern case_sensitive="yes">
        <marker><token regexp="yes">(A[bn]|Aus|Um|Über|Unter|Auf|Hin|Nach|Vor|Zurück)-</token></marker>
        <token postag="KON:.+" postag_regexp="yes"></token>
        <token regexp="yes">(A[bn]|Aus|Um|Über|Unter|Auf|Her|Hin|Nach|Vor|Weg|Zurück)\w+</token>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
    <rule name="Allahu akbar" id="ALLAHU_AKBAR">
      <pattern>
        <token case_sensitive="yes">Allahu</token>
        <token>akbar</token>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
    <rule name="al dente" id="AL_DENTE">
      <pattern case_sensitive="yes">
        <token>al</token>
        <token regexp="yes">dente|diavolo|fine|pari</token>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
    <rule name="MANUS" id="MANUS">
      <pattern>
        <token>manus</token>
        <token>manum</token>
        <token>lavat</token>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
    <rule name="Head of XXX" id="HEAD_OF"><!-- common job title -->
      <pattern case_sensitive="yes">
        <token>Head</token>
        <token>of</token>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
    <rule name="Director of XXX" id="DIRECTOR_OF"><!-- common job title -->
      <pattern case_sensitive="yes">
        <token>Director</token>
        <token>of</token>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
    <rule name="Chief of XXX" id="CHIEF_OF"><!-- common job title -->
      <pattern case_sensitive="yes">
        <token>Chief</token>
        <token>of</token>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
    <rule name="Vice President of XXX" id="VICE_PRESIDENT_OF"><!-- common job title -->
      <pattern case_sensitive="yes">
        <token>Vice</token>
        <token>President</token>
        <token>of</token>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
    <rule name="VP of XXX" id="VP_OF"><!-- common job title -->
      <pattern case_sensitive="yes">
        <token>VP</token>
        <token>of</token>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
    <rule name="COURT" id="COURT">
      <pattern case_sensitive="yes">
        <token regexp="yes">Cent(er|re)|Supreme</token>
        <token regexp="yes">Courts?</token>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
    <rule name="SOCIAL" id="SOCIAL">
      <pattern case_sensitive="yes">
        <token>Social</token>
        <token regexp="yes">Collaboration|Engineerings?|Learnings?|Networks?|Software|Sponsorings?|Bots?|Media|Costs?|Freezing|Responsibility|Entrepreneurships?|Taggings?|Business|Gamings?|Payments?|Security|Web</token>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
    <rule name="WOODS" id="WOODS"><!-- Bretton/Tiger Woods-->
      <pattern case_sensitive="yes">
        <token postag="UNKNOWN|EIG:.+" postag_regexp="yes"></token>
        <token>Woods</token>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>

    <rule name="Ignore common chemical formulas" id="IGNORE_COMMON_CHEMICAL_FORMULAS">
    <!-- Created by Tiago F. Santos, 2019-08-29  -->
    <!-- List retreived and triaged from https://en.wikipedia.org/wiki/Glossary_of_chemical_formulas -->
      <pattern case_sensitive="yes">
          <token regexp="yes" case_sensitive='yes'>Ac₂O₃|Ag₂C₂|Ag₂C₂O₄|Ag₂Cl₂|Ag₂CO₃|Ag₂Cr₂O₇|Ag₂CrO₄|Ag₂F|Ag₂MoO₄|Ag₂O|Ag₂S|Ag₂Se|Ag₂SeO₃|Ag₂SeO₄|Ag₂SO₄|Ag₂Te|Ag₃Br₂|Ag₃Br₃|Ag₃Cl₃|Ag₃I₃|Ag₃PO₄|AgBF₄|AgBrO₂|AgBrO₃|AgBrO₄|AgCl₃Cu₂|AgClO₃|AgClO₄|AgF₂|AgIO₂|AgIO₃|AgIO₄|AgMnO₄|AgN₃|AgNO₃|AgPF₆|Al₂BeO₄|Al₂Br₆|Al₂Cl₉K₃|Al₂CoO₄|Al₂F₆|Al₂I₆|Al₂MgO₄|Al₂O|Al₂O₂|Al₂O₃|Al₂O₅Si|Al₂O₇Si₂|Al₂S|Al₂S₃|Al₂Se|Al₂Te|Al₃F₁₄Na₅|Al₄C₃|Al₆BeO₁₀|Al₆O₁₃Si₂|AlBO₃|AlBr₃|AlCl₂F|AlCl₂H|AlCl₃|AlCl₄Cs|AlCl₄K|AlCl₄Na|AlCl₄Rb|AlCl₆K₃|AlCl₆Na₃|AlF₂|AlF₂O|AlF₃|AlF₄K|AlF₄Li|AlF₆K₃|AlF₆Li₃|AlF₆Na₃|AlI₃|AlLiO₂|AlNaO₂|AlO₂|AlPO₄|AlTe₂|As₂I₄|As₂Mg₃|As₂O₃|As₂O₅|As₂P₂|As₂S₄|As₂S₅|As₂Se|As₂Se₃|As₂Se₅|As₃O₄|As₃P|As₄O₃|As₄O₅|As₄S₃|As₄S₄|AsBr₃|AsCl₃|AsCl₃O|AsCl₄F|AsF₃|AsF₅|AsH₃|AsI₃|AsO₂|AsP₃|Au₂O₃|Au₂S|Au₂S₃|Au₂Se₃|AuBr₃|AuCl₃|AuF₃|AuI₃|B₂Cl₄|B₂F₄|B₂H₆|B₂O₃|B₂S₃|B₂Se₃|B₃N₃H₆|B₄C|Ba₂P₂O₇|Ba₂V₂O₇|Ba₂XeO₆|Ba₃N₂|BaB₆|BaBr₂|BaC₂|BaC₂O₄|BaCl₂|BaCO₃|BaCrO₄|BaF₂|BaFeSi₄O₁₀|BaHfO₃|BaHgI₄|BaI₂|BaMnO₄|BaMoO₄|BaN₆|BaNb₂O₆|BaO₂|BaS₂O₃|BaSeO₃|BaSeO₄|BaSi₂|BaSi₂O₅|BaSiF₆|BaSiO₃|BaSnO₃|BaSO₃|BaSO₄|BAsO₄|BaTeO₃|BaTiO₃|BaU₂O₇|BaWO₄|BaZrO₃|BBr₃|BCl₃|Be₂C|Be₃N₂|BeB₂|BeBr₂|BeCl₂|BeCO₃|BeF₂|BeI₂|BeSO₃|BeSO₄|BF₃|Bi₂O₃|Bi₂S₃|Bi₂Se₃|BI₃|BiBO₃|BiBr₃|BiC₆H₅O₇|BiCl₃|BiF₃|BiI₃|BiPO₄|BPO₄|Br₂|Br₂O₅|BrCl₃|BrCl₅|BrF₃|BrF₅|C₁₀H₁₀N₂O|C₁₀H₁₀O₂|C₁₀H₁₀O₄|C₁₀H₁₁N₃O₃S|C₁₀H₁₂N₂|C₁₀H₁₂O|C₁₀H₁₂O₂|C₁₀H₁₂O₃|C₁₀H₁₃N₅O₄|C₁₀H₁₄O|C₁₀H₁₅ON|C₁₀H₁₆|C₁₀H₁₆O|C₁₀H₁₇NO₃|C₁₀H₁₉NO₃|C₁₀H₂₀N₂O₂|C₁₀H₂₂|C₁₀H₇N₃S|C₁₀H₇NO₂|C₁₀H₈|C₁₀H₈O₃|C₁₀H₉N₅O|C₁₀H₉NO₂|C₁₁H₁₁NO₂|C₁₁H₁₂N₂O₂|C₁₁H₁₂O₃|C₁₁H₁₄N₂O|C₁₁H₁₄O₂|C₁₁H₁₉NO₄|C₁₁H₂₄|C₁₁H₈O₂|C₁₂H₁₀|C₁₂H₁₀ClN₂O₅S|C₁₂H₁₁N₅|C₁₂H₁₁N₇|C₁₂H₁₃NO₂|C₁₂H₁₄O₄|C₁₂H₁₅NO|C₁₂H₁₆N₂|C₁₂H₁₆O₃|C₁₂H₁₆O₄|C₁₂H₁₆O₇|C₁₂H₁₈O|C₁₂H₂₂O₁₁|C₁₂H₂₆|C₁₂H₄N₄|C₁₂H₈O₄|C₁₃₁H₂₀₀N₃₀O₄₃S₂|C₁₃H₁₀O|C₁₃H₁₂F₂N₆O|C₁₃H₁₂O|C₁₃H₁₂O₂|C₁₃H₁₄N₂O|C₁₃H₁₆N₂O₂|C₁₃H₁₈O₂|C₁₃H₂₈|C₁₄H₁₀|C₁₄H₁₀O₁₄|C₁₄H₁₂O₃|C₁₄H₁₄Cl₂N₂O|C₁₄H₁₈N₂O₅|C₁₄H₁₈N₄O₃|C₁₄H₃₀|C₁₅₈H₂₅₁N₃₉O₄₆S|C₁₅H₁₀O₄|C₁₅H₁₀O₅|C₁₅H₁₀O₆|C₁₅H₁₀O₇|C₁₅H₁₂N₂O|C₁₅H₁₂N₂O₂|C₁₅H₃₂|C₁₆₁H₂₃₆N₄₂O₄₈|C₁₆₄H₂₅₆Na₂O₆₈S₂|C₁₆H₁₄O₃|C₁₆H₂₈N₂O₆Zn|C₁₆H₃₄|C₁₇H₁₃ClN₄|C₁₇H₁₄F₃N₃O₂S|C₁₇H₁₈N₂O₆|C₁₇H₁₉N₃O₃S|C₁₇H₂₂O₂|C₁₇H₂₄O|C₁₇H₂₄O₉|C₁₇H₃₆|C₁₈H₂₂O₂|C₁₈H₂₄O₂|C₁₈H₂₄O₃|C₁₈H₂₄O₄|C₁₈H₂₇NO₃|C₁₈H₃₂O₂|C₁₈H₃₆O₂|C₁₈H₃₈|C₁₉H₁₆ClNO₄|C₁₉H₂₆O₂|C₁₉H₂₈O₂|C₁₉H₃₀O₂|C₁₉H₄₀|C₂₀H₂₄O₂N₂|C₂₀H₂₇NO₁₁|C₂₀H₂₈O₂|C₂₀H₃₂O₅|C₂₀H₃₄O₅|C₂₀H₄₂|C₂₁H₂₀O₆|C₂₁H₃₀O₂|C₂₁H₃₆N₇O₁₆P₃S|C₂₂H₂₃ClN₂O₂|C₂₃H₁₉ClF₃NO₃|C₂F₄|C₂H₂|C₂H₂O₂|C₂H₃Cl|C₂H₃NO|C₂H₄|C₂H₄Cl₂|C₂H₄N₄|C₂H₄O|C₂H₄O₂|C₂H₅Br|C₂H₅NH₂|C₂H₅NO₂|C₂H₅OCs|C₂H₅OH|C₂H₅OK|C₂H₅ONa|C₂H₅ORb|C₂H₆|C₂H₆OS|C₂H₇NO|C₂H₇NO₂|C₂H₇NO₃S|C₃₀H₁₉NO₉|C₃₄H₄₆O₁₈|C₃₅H₆₀O₆|C₃H₃N|C₃H₄N₂|C₃H₄N₂S|C₃H₄O₃|C₃H₄O₄|C₃H₅N₃|C₃H₅N₃O₉|C₃H₅NO|C₃H₆|C₃H₆O₂|C₃H₆O₂S|C₃H₇N|C₃H₇NO₂|C₃H₇NO₂S|C₃H₇NO₃|C₃H₈|C₃H₈NO₅P|C₃H₈O|C₃H₈O₂|C₃H₈O₃|C₃H₉N₃|C₃HN|C₃N₁₂|C₄₀H₅₆|C₄₄H₆₉N₁₅O₉S|C₄H₁₀|C₄H₁₀O|C₄H₁₀O₂|C₄H₁₀O₃|C₄H₁₁NO₂|C₄H₂|C₄H₂BrClN₂|C₄H₂Cl₂N₂|C₄H₃Cl₂N₃|C₄H₃FN₂O₂|C₄H₄|C₄H₄FN₃O|C₄H₄N₂O₂|C₄H₄N₄|C₄H₄O|C₄H₅N₃O|C₄H₆N₂|C₄H₆N₂S|C₄H₆N₄O|C₄H₆O₂|C₄H₆O₄|C₄H₇BrO₂|C₄H₇KO₃|C₄H₇NaO₃|C₄H₇NO₂|C₄H₇NO₃|C₄H₇NO₄|C₄H₈|C₄H₈N₂O₃|C₄H₈O|C₄H₈O₂|C₄H₈O₃|C₄H₉Li|C₄H₉NO₂|C₄H₉NO₃|C₄H₉OH|C₄HCl₂FN₂|C₄I₂|C₅₅H₇₄IN₃O₂₁S₄|C₅₉H₈₀N₄O₂₂S₄|C₅H₁₀|C₅H₁₀N₂O₃|C₅H₁₀O₂|C₅H₁₀O₄|C₅H₁₁NO₂|C₅H₁₁NO₂S|C₅H₁₂|C₅H₁₂O₂|C₅H₁₂O₄|C₅H₁₂O₅|C₅H₃Br₂N|C₅H₃BrN₂O₂|C₅H₃ClN₂O₂|C₅H₃ClN₄|C₅H₄N₂O₂|C₅H₄N₂O₄|C₅H₄N₄O|C₅H₄N₄O₂|C₅H₄N₄S|C₅H₄NCOOH|C₅H₄O|C₅H₄O₂|C₅H₄O₂S|C₅H₅BrN₂|C₅H₅ClN₂|C₅H₅IN₂|C₅H₅N|C₅H₅N₃O|C₅H₅N₃O₂|C₅H₅N₅|C₅H₅N₅O|C₅H₅NO|C₅H₆BNO₂|C₅H₆N₂|C₅H₆N₂O₂|C₅H₆N₂OS|C₅H₆O|C₅H₆O₅|C₅H₇N₃|C₅H₈O₂|C₅H₉NO₂|C₅H₉NO₄|C₆₂H₈₉CoN₁₃O₁₅P|C₆₃H₈₈CoN₁₄O₁₄P|C₆₃H₉₁CoN₁₃O₁₄P|C₆F₅COOH|C₆H₁₀O₃|C₆H₁₀O₄|C₆H₁₁NO₂|C₆H₁₂|C₆H₁₂O₃|C₆H₁₂O₆|C₆H₁₃NO|C₆H₁₃NO₂|C₆H₁₄|C₆H₁₄N₂O₂|C₆H₁₄N₄O₂|C₆H₁₄O₂|C₆H₁₄O₃|C₆H₁₄O₄|C₆H₁₅NO₃|C₆H₃Br₃O|C₆H₃Cl₃O|C₆H₄BrNO₂|C₆H₄ClN₃|C₆H₄ClNO₂|C₆H₄N₄|C₆H₄O₂|C₆H₅Br|C₆H₅CH₂OH|C₆H₅CHO|C₆H₅Cl|C₆H₅COCl|C₆H₅COOH|C₆H₅F|C₆H₅I|C₆H₅NO₂|C₆H₅NO₃|C₆H₅OH|C₆H₆|C₆H₆BClO₂|C₆H₆BFO₂|C₆H₆IN|C₆H₆N₂O|C₆H₆N₂O₂|C₆H₆O|C₆H₆O₂|C₆H₆O₃|C₆H₇BO₂|C₆H₇CsO₆|C₆H₇KO₆|C₆H₇LiO₆|C₆H₇N₃O|C₆H₇NaO₆|C₆H₇RbO₆|C₆H₈N₂|C₆H₈N₂O₂S|C₆H₈O₇|C₆H₉N₃O₂|C₆H₉N₃O₃|C₆N₄|C₇₂H₁₀₀CoN₁₈O₁₇P|C₇₇H₁₂₀N₁₈O₂₆S|C₇H₁₀N₂|C₇H₁₁NO₅|C₇H₁₂N₂O₄|C₇H₁₂O₄|C₇H₁₄O₆|C₇H₁₆|C₇H₅Br₃O|C₇H₅Cl₃O|C₇H₅F₃O|C₇H₅FO₂|C₇H₅N₃O₂|C₇H₅NO₄|C₇H₅NS₂|C₇H₆N₂|C₇H₆O|C₇H₆O₂|C₇H₆O₃|C₇H₆O₄|C₇H₆O₅|C₇H₇BO₄|C₇H₇N₃|C₇H₇NO₂|C₇H₇NO₃|C₇H₈|C₇H₈ClN₃O₄S₂|C₇H₈N₄O₂|C₇H₉BO₂|C₇H₉BO₃|C₈₃H₁₃₁N₁₉O₂₇S|C₈H₁₀N₄O₂|C₈H₁₁N₅O₃|C₈H₁₁NO|C₈H₁₆O₂|C₈H₁₆O₆|C₈H₁₈|C₈H₅F₃N₂OS|C₈H₅NO₂|C₈H₆BrN|C₈H₆Cl₂O₃|C₈H₆ClN|C₈H₆N₂O|C₈H₆N₂O₂|C₈H₇N|C₈H₇NO|C₈H₈|C₈H₈N₂OS|C₈H₈O₃|C₈H₈O₄|C₈H₉NO₂|C₉H₁₀O|C₉H₁₀O₃|C₉H₁₁NO₂|C₉H₁₁NO₃|C₉H₁₁NO₄|C₉H₁₇NO₂|C₉H₁₈N₂O₂|C₉H₂₀|C₉H₆BrN|C₉H₆N₂|C₉H₆O₃|C₉H₆OS|C₉H₇NO|C₉H₇NO₂|C₉H₈N₂|C₉H₈O₂|C₉H₈O₃|C₉H₈O₄|C₉H₉N|C₉H₉NO|C₉H₉NO₃|Ca₃N₂|Ca₃P₂|CaAl₂O₄|CaB₆|CaBr₂|CaC₂|CaC₂O₄|CaCl₂|CaCN₂|CaCO₃|CaF₂|CaH₂|CaHPO₄|CaI₂|CaMoO₄|CaO₂|CaSeO₃|CaSeO₄|CaSiO₃|CaSO₃|CaSO₄|CaTeO₃|CaTeO₄|CaTiO₃|CaWO₄|CCl₂F₂|CCl₄|Cd₂Nb₂O₇|Cd₃As₂|Cd₃P₂|CdBr₂|CdC₂O₄|CdCl₂|CdCO₃|CdCrO₄|CdF₂|CdI₂|CdMoO₄|CdSeO₃|CdSiO₃|CdSO₃|CdSO₄|CdTeO₄|CdTiO₃|CdWO₄|CdZrO₃|Ce₂C₃|Ce₂O₃|Ce₂S₃|CeB₆|CeBr₃|CeCl₃|CeF₃|CeF₄|CeI₂|CeI₃|CeO₂|CeSi₂|CF₃Cl|CF₄|CFCl₂CF₂Cl|CFCl₃|CH₂CHCHCH₂|CH₂CHOH|CH₂Cl₂|CH₂ClCOOH|CH₂ClF|CH₂CO|CH₂O|CH₂OHCH₂OH|CH₃CCH|CH₃CdCH₃|CH₃CH₂Br|CH₃CH₂CH₂CH₂OH|CH₃CH₂CH₂OH|CH₃CH₂CONH₂|CH₃CH₂COOH|CH₃CH₂OCH₂CH₃|CH₃CH₂OH|CH₃CHCH₂|CH₃CHCHCH₃|CH₃CHO|CH₃Cl|CH₃CN|CH₃COCH₃|CH₃COCl|CH₃CONH₂|CH₃COOCH₂C₆H₅|CH₃COOCH₃|CH₃COOCHCH₂|CH₃COOCs|CH₃COOH|CH₃COOK|CH₃COONa|CH₃COORb|CH₃HgCH₃|CH₃I|CH₃NH₂|CH₃NO|CH₃OCH₃|CH₃OCs|CH₃OH|CH₃OK|CH₃OLi|CH₃ONa|CH₃ORb|CH₃SCH₃|CH₃SH|CH₄|CH₄N₂O₂|CH₅N₃|CHCl₃|CHClF₂|Cl₂|Cl₂O₃|Cl₂O₆|Cl₂O₇|Cl₂O₈|ClF₃|ClF₅|ClO₂|ClO₃F|ClOClO₃|CO₂|Co₂B|Co₂S₃|Co₂SiO₄|Co₂SnO₄|Co₂SO₄|Co₂TiO₄|CO₃|CoAl₂O₄|CoAs₂|CoBr₂|CoC₂O₄|CoCl₂|COCl₂|CoCr₂O₄|CoCrO₄|CoF₂|CoF₃|CoI₂|CoMoO₄|CoS₂|CoSeO₃|CoTiO₃|CoWO₄|Cr₂O₃|Cr₂S₃|Cr₂Se₃|Cr₂Te₃|Cr₃As₂|Cr₃C₂|Cr₃Sb₂|CrBr₂|CrBr₃|CrCl₂|CrCl₃|CrCl₄|CrF₂|CrF₃|CrF₄|CrF₅|CrF₆|CrI₂|CrI₃|CrO₂|CrO₂Cl₂|CrO₃|CrPO₄|CrSi₂|CrVO₄|CS₂|Cs₂C₂O₄|Cs₂CO₃|Cs₂Cr₂O₇|Cs₂CrO₄|Cs₂HPO₃|Cs₂HPO₄|Cs₂MoO₄|Cs₂NbO₃|Cs₂O|Cs₂O₂|Cs₂S|Cs₂SiO₃|Cs₂SO₃|Cs₂SO₄|Cs₂TeO₄|Cs₂TiO₃|Cs₂WO₄|Cs₃PO₃|Cs₃PO₄|Cs₃VO₄|CsBO₂|CsBr₃|CsBrO₂|CsBrO₃|CsBrO₄|CsC₂H₃O₂|CsClO₂|CsClO₃|CsClO₄|CsH₂PO₃|CsH₂PO₄|CsHCO₃|CsHSO₃|CsHSO₄|CsI₃|CsIO₂|CsIO₃|CsIO₄|CsN₃|CsNbO₃|CsNH₂|CsNO₂|CsNO₃|CsO₂|CsSeO₄|CsTaO₃|Cu₂O|Cu₂S|Cu₂Se|Cu₂Te|Cu₃As|Cu₃P|Cu₃Sb|Cu₉S₅|CuBr₂|CuC₂O₄|CuCl₂|CuF₂|CuFe₂O₄|CuFe₂S₃|CuFeS₂|CuIO₃|CuMoO₄|CuSiO₃|CuSO₄|CuTeO₃|CuTiO₃|CuWO₄|D₂O|Dy₂O₃|Dy₂S₃|DyBr₃|DyCl₂|DyCl₃|DySi₂|ErCl₃|ErF₂|ErF₃|ErI₃|ErI₄Na|Eu₂O|Eu₂O₂|Eu₂O₃|Eu₂S|Eu₂S₂|EuCl₂|EuCl₃|EuF₃|EuI₂|EuNb₂O₆|EuNbO₂|EuO₂V|EuO₃Ti|EuO₃V|EuO₄W|EuS₂|EuSO₄|F₁₀Mo₂|F₁₀S₂|F₁₅Mo₃|F₂|F₂Fe|F₂Ga|F₂Gd|F₂Ge|F₂GeO|F₂Hg|F₂Hg₂|F₂Ho|F₂IP|F₂K₂|F₂Kr|F₂La|F₂Li₂|F₂Mg|F₂Mn|F₂Mo|F₂MoO₂|F₂N|F₂N₂O|F₂Na₂|F₂Nd|F₂Ni|F₂O|F₂O₂|F₂O₂S|F₂O₂W|F₂O₅S₃|F₂OS|F₂OSi|F₂OTi|F₂P|F₂Pb|F₂Pt|F₂Pu|F₂S|F₂S₂|F₂S₂W|F₂Sc|F₂Se|F₂Si|F₂Sn|F₂Sr|F₂SW|F₂Th|F₂Ti|F₂Tl₂|F₂W|F₂Xe|F₂Y|F₂Zn|F₂Zr|F₃Fe|F₃Ga|F₃Gd|F₃Ho|F₃La|F₃Li₃|F₃Lu|F₃Mn|F₃Mo|F₃MoO|F₃MoS|F₃N|F₃NaSn|F₃Nd|F₃NO|F₃NO₂S|F₃NO₃S|F₃NS|F₃OP|F₃OTa|F₃OV|F₃P|F₃Pr|F₃PS|F₃Pu|F₃Rh|F₃S|F₃Sb|F₃Sc|F₃Si|F₃Sm|F₃SW|F₃Tb|F₃Th|F₃Ti|F₃Tl|F₃Tm|F₃W|F₃Y|F₃Yb|F₃Zr|F₄Ge|F₄Ge₂|F₄Hf|F₄Mg₂|F₄Mo|F₄MoO|F₄MoS|F₄N₂|F₄Na₂Sn|F₄OOs|F₄OP₂|F₄ORe|F₄OS|F₄OW|F₄OXe|F₄P₂|F₄Pb|F₄Pt|F₄Pu|F₄S|F₄Se|F₄Si|F₄Sn₂|F₄SW|F₄Ti|F₄U|F₄W|F₄Xe|F₄Zr|F₅I|F₅Mo|F₅ORe|F₅P|F₅Pu|F₅S|F₅Sb|F₅Ta|F₅U|F₅W|F₆Fe₂|F₆La₂|F₆Mo|F₆NP₃|F₆Os|F₆Pu|F₆Re|F₆S|F₆Se|F₆Si₂|F₆Sn₃|F₆Te|F₆U|F₆W|F₆Xe|F₇I|F₇NS|F₇Re|F₈Si₃|Fe₂I₂|Fe₂I₄|Fe₂O₁₂S₃|Fe₂O₁₂W₃|Fe₂O₃|Fe₂P|Fe₂SiO₄|Fe₃H₂Na₂O₄₅Si|Fe₃O₄|Fe₃P|Fe₇Si₈O₂₄H₂|FeBr₂|FeBr₃|FeC₁₀H₁₀|FeC₂O₄|FeC₅O₅|FeCl₂|FeCl₃|FeCO₃|FeCr₂O₄|FeF₂|FeI₂|FeI₃|FeMoO₄|FeO₂|FeO₂H|FeO₄S|FeO₄Se|FeO₈H₄P₂|FePO₄|FeS₂|FeTiO₃|FeVO₄|FeWO₄|FeZrO₃|FI₂|FLi₂|FMnO₃|FNa₂|FNO₂|FNO₃|FO₂|FO₃S|FPS₂|Ga₂O₃|Ga₂S₃|Ga₂Te₃|GaAsO₄|GaBr₃|GaCl₂|GaI₂|GaI₃|GaPO₄|GeBr₄|GeH₃COOH|GeI₂|GeI₄|H₂|H₂C₂O₄|H₂C₄H₄O₆|H₂C₈H₄O₄|H₂CO|H₂CO₃|H₂CrO₄|H₂CSO|H₂N₂O₂|H₂NCH₂COOH|H₂NNH₂|H₂O|H₂O₂|H₂S|H₂S₂O₂|H₂S₂O₃|H₂S₂O₄|H₂S₂O₅|H₂S₂O₆|H₂S₂O₇|H₂S₂O₈|H₂SeO₃|H₂SeO₄|H₂SiO₃|H₂SO₃|H₂SO₄|H₂TeO₃|H₂TiO₃|H₃AsO₄|H₃CCH₂CH₃|H₃PO₂|H₃PO₃|H₃PO₄|H₄XeO₆|H₆TeO₆|HBrO₂|HBrO₃|HBrO₄|HC₁₂H₁₇ON₄SCl₂|HC₃H₅O₃|HC₆H₇O₆|HC₉H₇O₄|HClO₂|HClO₃|HClO₄|HCONH₂|HCOONH₄|HfBr₄|HfF₄|Hg₂Br₂|Hg₂Cl₂|Hg₂I₂|HgBr₂|HgCl₂|HgI₂|HgSeO₃|HgTeO₃|HgWO₄|HIO₂|HIO₃|HIO₄|HN₃|HNO₂|HNO₃|I₂|I₂O₅|IBr₃|ICl₃|In₂O₃|In₂S₃|In₂Se₃|In₂Te₃|InBr₂I|InBr₃|InBrI₂|InCl₂|InCl₃|InI₂|InI₃|InPO₄|IrBr₃|K₂CO₃|K₂Cr₂O₇|K₂CrO₄|K₂HAsO₄|K₂HPO₃|K₂HPO₄|K₂MnO₄|K₂N₂O₂|K₂O|K₂O₂|K₂S|K₂S₂O₃|K₂S₂O₅|K₂S₂O₈|K₂SO₃|K₂SO₄|K₃AsO₄|K₃C₆H₅O₇|K₃PO₃|K₃PO₄|KAsO₂|KBrO₂|KBrO₃|KBrO₄|KClO₂|KClO₃|KClO₄|KH₂AsO₄|KH₂PO₃|KH₂PO₄|KHCO₃|KHSO₃|KHSO₄|KIO₂|KIO₃|KIO₄|KMnO₄|KNbO₃|KNO₂|KNO₃|La₂O₃|LaBr₃|LaCl₃|LaI₃|LaPO₄|Li₂CO₃|Li₂Cr₂O₇|Li₂CrO₄|Li₂HAsO₄|Li₂HPO₃|Li₂HPO₄|Li₂MoO₄|Li₂N₂O₂|Li₂NbO₃|Li₂O|Li₂O₂|Li₂S|Li₂SeO₃|Li₂SeO₄|Li₂SiO₃|Li₂SO₃|Li₂SO₄|Li₂TeO₃|Li₂TeO₄|Li₂TiO₃|Li₂WO₄|Li₂ZrO₃|Li₃AsO₄|Li₃PO₃|Li₃PO₄|LiAlH₄|LiBH₄|LiBrO₂|LiBrO₃|LiBrO₄|LiC₂H₅O|LiClO₂|LiClO₃|LiClO₄|LiH₂AsO₄|LiH₂PO₃|LiH₂PO₄|LiHCO₃|LiHSO₃|LiHSO₄|LiIO₂|LiIO₃|LiIO₄|LiNbO₃|LiNO₂|LiNO₃|LiTaO₃|Mg₂P₂O₇|Mg₂SiO₄|Mg₃As₂|Mg₃Bi₂|Mg₃P₂|MgBr₂|MgC₂O₄|MgCl₂|MgCO₃|MgCrO₄|MgF₂|MgHPO₄|MgI₂|MgMoO₄|MgSeO₃|MgSeO₄|MgSiO₃|MgSO₃|MgSO₄|MgTiO₃|MgWO₄|Mn₂O₃|Mn₃As₂|Mn₃O₄|Mn₃P₂|Mn₃Sb₂|MnBr₂|MnCl₂|MnCO₃|MnF₂|MnI₂|MnMoO₄|MnO₂|MnZrO₃|MoBr₂|MoBr₃|MoCl₂|MoCl₃|MoCl₅|MoO₂|MoO₃|MoS₂|MoSe₂|N₂|N₂H₂|N₂H₄|N₂O|N₂O₃|N₂O₄|N₂O₅|N₄H₄|Na₂C₂O₄|Na₂C₆H₆O₇|Na₂CO₃|Na₂HAsO₄|Na₂HPO₃|Na₂HPO₄|Na₂MoS₄|Na₂N₂O₂|Na₂O|Na₂O₂|Na₂S|Na₂S₂O₃|Na₂S₂O₅|Na₂S₂O₈|Na₂S₄|Na₂SeO₃|Na₂SeO₄|Na₂SO₃|Na₂SO₄|Na₂TeO₃|Na₂TeO₄|Na₂TiO₃|Na₂ZnO₂|Na₂ZrO₃|Na₃AlF₆|Na₃AsO₄|Na₃C₆H₅O₇|Na₃PO₃|Na₃PO₄|Na₃VO₄|Na₄V₂O₇|NaAlSi₃O₃|NaAsO₂|NaBrO₂|NaBrO₃|NaBrO₄|NaC₆F₅COO|NaC₆H₅COO|NaC₆H₇O₇|NaCl|NaClO₂|NaClO₃|NaClO₄|NaH₂AsO₄|NaH₂PO₃|NaH₂PO₄|NaHCO₃|NaHSO₃|NaHSO₄|NaIO₂|NaIO₃|NaIO₄|NaNbO₃|NaNH₂C₆H₄SO₃|NaNO₂|NaNO₃|NaSeO₃|NaTaO₃|NaVO₃|Nb₂O₃|NbBr₅|NbCl₃|NbCl₅|NbI₅|NCl₃|Nd₂O₃|NdCl₂|NdI₂|NH₂C₆H₄SO₃H|NH₂CH₂CH₂NH₂|NH₂CH₂CN|NH₂Cl|NH₂CONH₂|NH₂COOH|NH₂OH|NH₃|NH₄Br|NH₄Cl|NH₄ClO₄|NH₄CO₂NH₂|NH₄HS|NH₄NO₃|NH₄OCONH₂|NH₄OH|NHCl₂|Ni₂SiO₄|NI₃|Ni₃Sb₂|NiBr₂|NiCl₂|NiFe₂O₄|NiI₂|NiMoO₄|NiS₂|NiSO₄|NiTiO₃|NiWO₄|NO₂|NO₂Cl|O₂|O₂F₂|O₃|OF₂|P₂I₄|P₂O₅|P₂S₃|P₂Se₃|P₃N₅|PbC₂O₄|PbCl₂|PbCl₄|PbCO₃|PbCrO₄|PbF₂|PbHAsO₄|PbI₂|PbO₂|PbSO₄|PCl₃|PCl₅|PH₃|PoBr₂|PoCl₂|POCl₃|PoCl₄|PoF₆|PoH₂|PoO₂|PoO₃|RaCl₂|Rb₂CO₃|Rb₂HPO₃|Rb₂HPO₄|Rb₂O|Rb₂O₂|Rb₂S|Rb₂SO₃|Rb₂SO₄|Rb₃PO₃|Rb₃PO₄|RbBrO₂|RbBrO₃|RbBrO₄|RbClO₂|RbClO₃|RbClO₄|RbH₂PO₃|RbH₂PO₄|RbHCO₃|RbHSO₃|RbHSO₄|RbIO₂|RbIO₃|RbIO₄|RbNbO₃|RbNO₂|RbNO₃|RnF₂|RuCl₃|RuF₆|RuO₄|S₂Br₂|Sb₂O₃|Sb₂O₅|Sb₂OS₂|Sb₂S₃|Sb₂Se₃|Sb₂Se₅|Sb₂Te₃|SbBr₃|SbCl₃|SbCl₅|SbI₃|SbPO₄|Sc₂O₃|SeBr₄|SeCl₄|SeO₂|SeOCl₂|SeOF₂|SF₄|SF₆|Si₃N₄|SiBr₄|SiCl₄|SiH₄|SiI₄|SiO₂|Sn₃Sb₄|SnBr₂|SnBr₂Cl₂|SnBr₃Cl|SnBr₄|SnBrCl₃|SnCl₂|SnCl₂I₂|SnCl₄|SnI₄|SnO₂|SnS₂|SnSe₂|SnTe₄|SO₂|SO₂Cl₂|SO₂F₂|SO₃|SOF₂|Sr₂RuO₄|SrBr₂|SrC₂O₄|SrCl₂|SrCO₃|SrF₂|SrHfO₃|SrI₂|SrMoO₄|SrSeO₃|SrSeO₄|SrTeO₃|SrTeO₄|SrTiO₃|T₂O|TaBr₃|TaBr₅|TaCl₅|TaI₅|TeBr₂|TeBr₄|TeCl₂|TeCl₄|TeI₂|TeI₄|TeO₂|ThO₂|TiBr₄|TiCl₂I₂|TiCl₃I|TiCl₄|TiH₂|TiI₄|TiO₂|Tl₂MoO₄|Tl₂SeO₃|Tl₂TeO₃|Tl₂WO₄|Tl₃As|TlBr₃|TlC₂H₃O₂|TlCl₃|TlI₃|TlIO₃|TlNO₃|TlPF₆|TmCl₃|U₃O₈|UBr₂|UBr₃|UBr₅|UC₂|UCl₃|UCl₄|UF₄|UF₆|UI₃|UO₂|UO₂Cl₂|UO₂SO₄|UO₃|US₂|USe₂|UTe₂|V₂O₃|V₂O₅|VBr₂|VBr₃|VCl₂|VCl₃|VI₃|VOC₂O₄|VOSO₄|WBr₂|WBr₃|WBr₄|WBr₅|WBr₆|WCl₂|WCl₃|WCl₄|WCl₅|WCl₆|WF₄|WF₅|WF₆|WI₂|WI₄|WO₂|WO₂Br₂|WO₂Cl₂|WO₂I₂|WO₃|WOBr₃|WOBr₄|WOCl₃|WOCl₄|WOF₄|WS₂|WS₃|WSe₂|WTe₂|Y₂O₃|Y₂S₃|Yb₂O₃|Yb₂S₃|Yb₂Se₃|YB₆|YbBr₂|YbBr₃|YbCl₂|YbCl₃|YbF₂|YbF₃|YbI₂|YbI₃|YbPO₄|YBr₃|YbSi₂|YC₂|YCl₃|YF₃|YVO₄|Zn₂P₂O₇|Zn₂SiO₄|Zn₃As₂|Zn₃N₂|Zn₃P₂|Zn₃Sb₂|ZnBr₂|ZnCl₂|ZnCO₃|ZnCr₂O₄|ZnF₂|ZnI₂|ZnMoO₄|ZnO₂|ZnS₂O₃|ZnSeO₃|ZnSeO₄|ZnSnO₃|ZnSO₃|ZnSO₄|ZnTeO₃|ZnTeO₄|ZnTiO₃|ZnWO₄|ZnZrO₃|ZrB₂|ZrBr₄|ZrCl₄|ZrF₄|ZrI₄|ZrO₂|ZrP₂|ZrS₂|ZrSi₂|ZrSiO₄</token>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
    <rule name="JEROME" id="JEROME">
      <pattern case_sensitive="yes">
        <token>Jérôme</token>
        <token regexp="yes">Lalandes?|Leroys?|Cahuzacs?|Ferraris?|Bonapartes?|Ferandnez|Bels?|Kerviels?</token>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
    <rulegroup name="CASUAL" id="CASUAL">
        <!-- https://de.wikipedia.org/wiki/Casual -->
        <rule>
            <pattern case_sensitive="yes">
                <token>Casual</token>
                <token regexp="yes">Fridays?|Days?|Games?|Sex|Look</token>
            </pattern>
            <disambig action="ignore_spelling"/>
        </rule>
        <rule>
            <!-- https://www.dresscode.de/dresscodes/business-casual/ -->
            <pattern case_sensitive="yes">
                <token>Business</token>
                <token>Casual</token>
            </pattern>
            <disambig action="ignore_spelling"/>
        </rule>
    </rulegroup>
    <rule name="BLACK" id="BLACK">
        <!-- https://www.duden.de/suchen/dudenonline/black -->
        <!-- https://de.wikipedia.org/wiki/Black -->
        <pattern case_sensitive="yes">
            <token>Black</token>
            <token regexp="yes">Fridays?|Box(es)?|Panthers?|Power|Holes?|Tongues?|Mail|Metal|Jack|Sabbaths?|Lives|Site|Lakes?|Paintings?|Forests?|Mirrors?|Butlers?</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>
    <rule name="WHITE" id="WHITE">
        <pattern case_sensitive="yes">
            <token>White</token>
            <token regexp="yes">House|Collars?|Citys?|Lions?|Supremacy|Islands?|Christmas|Knights?|Noise|Oaks?|Russians?</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>
    <rule name="FULL" id="FULL">
        <pattern case_sensitive="yes">
            <token>Full</token>
            <token regexp="yes">HD|House|Services?|Speed|Dress|Force</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>
    <rule name="TECHNICAL" id="TECHNICAL">
        <pattern case_sensitive="yes">
            <token>Technical</token>
            <token regexp="yes">Support|Product|Sergeant</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>
    <rule name="PAID" id="PAID">
        <!-- https://de.wikipedia.org/wiki/Paid_Crowdsourcing -->
        <!-- https://de.wikipedia.org/wiki/Paid_Content -->
        <!-- https://www.duden.de/rechtschreibung/Paid_Content -->
        <pattern case_sensitive="yes">
            <token>Paid</token>
            <token regexp="yes">Content|Crowdsourcing|Services?</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>
    <rule name="DEAL" id="DEAL">
        <!-- https://de.wikipedia.org/wiki/Green_Deal -->
        <!-- https://www.duden.de/rechtschreibung/New_Deal -->
        <pattern case_sensitive="yes">
            <token regexp="yes">Green|New</token>
            <token min="0">New</token>
            <token>Deal</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>
    <rule name="GREEN" id="GREEN">
        <pattern case_sensitive="yes">
            <token>Green</token>
            <token regexp="yes">Bays?|Days?|Lanterns?|Books?|IT|Cards?|Tech</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>
    <rule name="CRYSTAL" id="CRYSTAL">
        <pattern case_sensitive="yes">
            <token>Crystal</token>
            <token regexp="yes">Lakes?|Palace|Mountains?</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>
    <rule name="FRENCH" id="FRENCH">
        <pattern case_sensitive="yes">
            <token>French</token>
            <token regexp="yes">Open|Dressings?|Knickers?|Fries|Montanas?|House</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>
    <rule name="DRY" id="DRY">
        <pattern case_sensitive="yes">
            <token>Dry</token>
            <token regexp="yes">Barrels?|Farmings?|Needling|Countys?</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>
    <rule name="SECOND" id="SECOND">
        <pattern case_sensitive="yes">
            <token>Second</token>
            <token regexp="yes">Screens?|Life|Line|Home|Reality|Army</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>
    <rule name="CENTER_OF" id="CENTER_OF">
        <pattern><!-- z.B. Center of Automotive Research -->
            <marker>
                <token case_sensitive="yes" regexp="yes">Center|Bank|Institute</token>
                <token regexp="yes" case_sensitive="yes">of|for</token>
            </marker>
            <token regexp="yes">.*[a-z].*</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>
    <rule name="WHO_S_WHO" id="WHO_S_WHO">
        <!-- https://www.duden.de/rechtschreibung/Who_s_who -->
        <pattern case_sensitive="yes">
            <token>Who</token>
            <token regexp="yes">'|’</token>
            <token>s</token>
            <token>who</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>
    <rule name="NEWS" id="NEWS">
        <pattern case_sensitive="yes">
            <token regexp="yes">Breaking|Soft|Fake</token>
            <token>News</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>
    <rule name="HUMAN" id="HUMAN">
        <pattern case_sensitive="yes">
            <token>Human</token>
            <token regexp="yes">(Resource|Interface|Interaction|Engineering|Counter|Relation)s?</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>
    <rule name="HUMAN_COMPUTER" id="HUMAN_COMPUTER">
        <pattern case_sensitive="yes">
            <token>Human</token>
            <token>Computer</token>
            <token regexp="yes">(Interface|Interaction|Engineering)s?</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>
    <rule name="PUBLIC" id="PUBLIC">
        <pattern case_sensitive="yes">
            <token>Public</token>
            <token regexp="yes">(School|Viewing|Relation)s?</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>
    <rule name="SCHOOL" id="SCHOOL">
        <pattern case_sensitive="yes">
            <token regexp="yes">Business|Grammar|Public|Old</token>
            <token regexp="yes">Schools?</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>
    <rule name="SLOW" id="SLOW">
        <pattern case_sensitive="yes">
            <token>Slow</token>
            <token regexp="yes">Foods?|Motions?|Cookers?</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>
    <rule name="DRAGON" id="DRAGON">
        <!-- https://de.wikipedia.org/wiki/Dragon_2 -->
        <!-- https://de.wikipedia.org/wiki/Dragon_Ball -->
        <pattern case_sensitive="yes">
            <token>Dragon</token>
            <token regexp="yes">Balls?|Age|Quests?|\d+</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>
    <rulegroup id="CC" name="cc">
        <!-- https://www.duden.de/rechtschreibung/cc -->
        <rule>
            <pattern>
                <marker>
                    <token case_sensitive="yes">cc</token>
                </marker>
                <token min="0">:</token>
                <!-- 
                    cc Peter
                    cc @peter
                -->
                <token postag="EIG:.*|UNKNOWN" postag_regexp="yes" regexp="yes">.*[a-z].*|.*@.+</token>
            </pattern>
            <disambig action="ignore_spelling"/>
        </rule>
        <rule>
            <!-- setz mich in cc -->
            <pattern>
                <token>in</token>
                <marker>
                    <token case_sensitive="yes">cc</token>
                </marker>
            </pattern>
            <disambig action="ignore_spelling"/>
        </rule>
        <rule>
            <!-- ich hab dich in cc gesetzt -->
            <pattern>
                <marker>
                    <token case_sensitive="yes">cc</token>
                </marker>
                <token inflected="yes">setzen</token>
            </pattern>
            <disambig action="ignore_spelling"/>
        </rule>
    </rulegroup>
    <rulegroup name="VON_DER_LEYEN" id="VON_DER_LEYEN">
        <rule>
            <pattern case_sensitive="yes">
                <token postag="SENT_START" />
                <marker>
                    <token>Von</token>
                    <token>der</token>
                    <token regexp="yes">Leyens?</token>
                </marker>
            </pattern>
            <disambig action="ignore_spelling"/>
        </rule>
        <rule>
            <pattern case_sensitive="yes">
                <marker>
                    <token>von</token>
                    <token>der</token>
                    <token regexp="yes">Leyens?</token>
                </marker>
            </pattern>
            <disambig action="ignore_spelling"/>
        </rule>
    </rulegroup>
</rules>
